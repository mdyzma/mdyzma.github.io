<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <generator uri="http://jekyllrb.com" version="3.4.5">Jekyll</generator>
  
  
  <link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2018-01-14T15:55:45+01:00</updated>
  <id>http://localhost:4000//</id>

  
    <title type="html">Consider Python</title>
  

  
    <subtitle>Blog dedicated to promote python and other data science tools.
</subtitle>
  

  
    <author>
        <name>Michal Dyzma</name>
      
      
    </author>
  

  
  
    <entry>
      
      <title type="html">Social media analysis with Flask, Part II</title>
      
      <link href="http://localhost:4000/2017/08/12/social-media-analysis-part-ii/" rel="alternate" type="text/html" title="Social media analysis with Flask, Part II" />
      <published>2017-08-12T16:11:47+02:00</published>
      <updated>2017-08-12T16:11:47+02:00</updated>
      <id>http://localhost:4000/2017/08/12/social-media-analysis-part-ii</id>
      <content type="html" xml:base="http://localhost:4000/2017/08/12/social-media-analysis-part-ii/">&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/banner.png&quot; alt=&quot;banner&quot; /&gt;&lt;br /&gt;
Flask application presenting social media accounts analysis in form of dashboard. It transforms various data sources into clear and concise report. &lt;strong&gt;Part II&lt;/strong&gt; describes creation of landing page and dashboard, including blueprints pattern, jinja templates, login/register mechanism and data storage in development and production.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
Source files for this article can be downloaded from this &lt;a href=&quot;https://github.com/mdyzma/md_analytics/releases/tag/v0.0.4&quot;&gt;GitHub repository&lt;/a&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;series-consists-of&quot;&gt;Series consists of:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://localhost:4000/2017/07/07/social-media-analysis-part-I/&quot;&gt;Social media analysis with Flask, Part I&lt;/a&gt; (Setting environment, flask, Travis CI/Heroku CD )&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://localhost:4000/2017/08/12/social-media-analysis-part-ii/&quot;&gt;Social media analysis with Flask, Part II&lt;/a&gt; (Templates, login/register mechanism, data storage)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;part-ii&quot;&gt;Part II&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#project-organization&quot;&gt;Project organization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jinja-engine&quot;&gt;Jinja engine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#layout&quot;&gt;Layout&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#landing-page&quot;&gt;Landing page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#login-register-forms&quot;&gt;Login / Register forms&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#login&quot;&gt;Login&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#register&quot;&gt;Register&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#summary&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;project--organization&quot;&gt;Project  organization&lt;/h2&gt;

&lt;p&gt;Flask auto-magically finds templates or static files in the app directory, but it is a good idea to structure things a little.&lt;/p&gt;

&lt;p&gt;From organizational point of view, most preferable is modular packaging of files, that specific parts of our application can be moved and adopted to other projects as a whole with its own routing mechanism, static files and templates. Therefore we will write specific components like dashboard or user management and place in separate folders and python packages. So we will have &lt;strong&gt;public&lt;/strong&gt; component (in this context component comprises of python package and folder with the same name placed in &lt;code class=&quot;highlighter-rouge&quot;&gt;templates/&lt;/code&gt;) with landing page accessible for all users. And some other components restricted only for logged users i.e. &lt;strong&gt;user&lt;/strong&gt; or &lt;strong&gt;dashboard&lt;/strong&gt;), which will be placed in separate folders. This kind of packaging allows to produce modular and easy to reuse code.&lt;/p&gt;

&lt;p&gt;The landing page is bound to the main endpoint of the app &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; and will reside in &lt;code class=&quot;highlighter-rouge&quot;&gt;public/&lt;/code&gt; package. Other have their own endpoints i.e &lt;code class=&quot;highlighter-rouge&quot;&gt;/users/&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;/dashboard/&lt;/code&gt;, and are placed in packages specific for them. We will adopt Flask blueprints pattern, which means the basic structure for each component will comprise of blueprint and it’s business logic, which will be registered with the main app.&lt;/p&gt;

&lt;p&gt;![app-diagram][app_diag]&lt;/p&gt;

&lt;p&gt;Repeatedly used, large blocks of code like &lt;code class=&quot;highlighter-rouge&quot;&gt;nav&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;footer&lt;/code&gt; may become quite complicated, therefore it is better to flatten template structure even more and incorporate them as separate &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; files from &lt;code class=&quot;highlighter-rouge&quot;&gt;templates/includes/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To sum up, each large component will have it’s own folder in the &lt;code class=&quot;highlighter-rouge&quot;&gt;app/&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;template/&lt;/code&gt;, to make it maximally portable. Each page will use common set of tools provided by frameworks and stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;static/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;dashboard&lt;/strong&gt;: routs, models, forms, db communication for data presentation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;public&lt;/strong&gt;: routs, forms and models for home page&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;static&lt;/strong&gt;: all static files served by the app, including css styles, JavaScript, images or fonts.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;templates&lt;/strong&gt;: basic layout blueprint and error pages
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;dashboard&lt;/strong&gt;: templates to the dashboard&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;includes&lt;/strong&gt;: partial HTML snippets for specific purpose i.e. navigation bar, footer, part of templates folder.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;public&lt;/strong&gt;: landing page and login/register templates&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;user&lt;/strong&gt;:  user profile templates&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;user&lt;/strong&gt;:  routes, models, forms and db communication for user data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
Finally lest focus a bit on the stack of tools which will be used in this application. Obviously back-end is Flask and gunicorn. User data will be stored in &lt;a href=&quot;https://www.mongodb.com&quot;&gt;MongoDB&lt;/a&gt;. Front-end will use two popular frameworks:  &lt;a href=&quot;http://getbootstrap.com&quot;&gt;Twitter Bootstrap 4&lt;/a&gt; to make page responsive and nice without having to write extensive CSS and &lt;a href=&quot;https://mdbootstrap.com/material-design-for-bootstrap/&quot;&gt;Material Design for Bootstrap&lt;/a&gt;, to make things more beautiful. For Bootstrap framework we will need to download already compiled css from Bootstrap’s page files: &lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap.min.css&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap.min.js&lt;/code&gt;. Bootstrap relies on jQuery, a JavaScript framework that provides a layer of abstraction in most common JavaScript operations (i.e. element selection, events handling). Therefore we should also add latest JQuery library &lt;code class=&quot;highlighter-rouge&quot;&gt;jquery-3.2.1.min.js&lt;/code&gt; to our files. For MDB we will need &lt;code class=&quot;highlighter-rouge&quot;&gt;mdb.min.css&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;mdb.min.js&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;popper.min.js&lt;/code&gt;. They will spice up our web site and give lots of good solutions and JavaScript functionalities to it. Files should be placed in appropriate static sub-folders:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree .
.
|-- app/
|   |-- public/
|   |   |-- __init__.py
|   |   |-- forms.py
|   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- views.py
|   |
|   |-- static/
|   |   |-- css/
|   |   |   |-- bootstrap.min.css
|   |   |   |-- mdb.min.css
|   |   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- style.css
|   |   |
|   |   |-- font/
|   |   |
|   |   |-- img/
|   |   |
|   |   |-- js/
|   |   |   |-- bootstrap.min.js
|   |   |   |-- jquery-3.2.1.min.js
|   |   |   |-- mdb.min.js
|   |   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- popper.min.js
|   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- favicon.ico
|   |
|   |-- templates/
|   |   |
|   |   |-- dashboard/
|   |   |
|   |   |-- includes/
|   |   |-- |-- contact.html
|   |   |   |-- footer.html
|   |   |   |-- meta.html
|   |   |   |-- messages.html
|   |   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- nav.html
|   |   |   
|   |   |-- public/
|   |   |   |-- home.html
|   |   |   |-- login.html
|   |   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- register.html
|   |   |
|   |   |-- user/
|   |   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- profile.html
|   |   |
|   |   |-- 404.html
|   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- layout.html
|   |
|   |-- __init__.py
|   |-- app.py
|   |-- extensions.py
|   |-- settings.py
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;jinja-engine&quot;&gt;Jinja engine&lt;/h2&gt;

&lt;p&gt;Flask uses very powerful and flexible template engine called &lt;a href=&quot;http://jinja.pocoo.org&quot;&gt;&lt;strong&gt;Jinja2&lt;/strong&gt;&lt;/a&gt;. It allows to define website in small blocks, one by one, which then are pieced together, to form complete HTML pages. The power of Jinja relies on possibility to push some portion of logic like iterations over containers or table rows, some flow control with &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; statements, some text processing capabilities like filtering, even mathematical operations and files handling. All this can be accedes from the web HTML template level. Still most important feature of Jinja is template inheritance mechanism similar to class inheritance in python. Basic layout template provides set of blocks, which can be overridden by the content of the specific page. Also changes, or bugs fixes are much easier, since the HTML for each part of the site exists in one place - template file.&lt;/p&gt;

&lt;p&gt;In templates we will use several Jinja elements, which will build dynamic structure skeleton. Most frequently used Jinja elements are so called statements (enclosed in &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;) and expressions (enclosed in  &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;). Statements provide different means of the work-flow control, for example &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; conditionals or &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; loops and some pre-defined Jinja tags i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;block&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;include&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;call&lt;/code&gt;. Expressions, on the other hand, display dictionary based variables passed to the engine via Flask context mechanism. For more details, please refer to the &lt;a href=&quot;http://jinja.pocoo.org&quot;&gt;Jinja documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;layout&quot;&gt;Layout&lt;/h2&gt;

&lt;p&gt;In our template we have specified several large code blocks, which will be filled with details in children templates. The most basic template, the architectural foundation for each page of our application, is called &lt;code class=&quot;highlighter-rouge&quot;&gt;layout.html&lt;/code&gt;. It contains all elements required by the browser to serve modern page and are common for entire project. It also includes links to the framework files used in the project (&lt;code class=&quot;highlighter-rouge&quot;&gt;.css&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;.js&lt;/code&gt;). From our point of view most important sections are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;head&lt;/strong&gt; section:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; - dynamic tab title&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;meta&lt;/strong&gt; - with necessary metadata and responsive design directives&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;seo&lt;/strong&gt;  - for proper SEO information like Open Graph and Twitter cards&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;styles&lt;/strong&gt; - place for custom css styles present at specific page&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;body&lt;/strong&gt; :
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;nav&lt;/strong&gt; - where we place navigation bar common for all pages&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;messages&lt;/strong&gt; - part displaying application messages to the user&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;intro&lt;/strong&gt;  - part specific for landing page&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;content&lt;/strong&gt; block - different content on each page&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;contact&lt;/strong&gt; block - contact info/form&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;footer&lt;/strong&gt; section - basic structural element with extended footer information like site map, and other links&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Base template with all the links to partial templates and code blocks should look similar to this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/layout.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{% block title %}{% endblock %} | MD-Analytics&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Head section meta from include --&amp;gt;&lt;/span&gt;
        {% include 'includes/meta.html' ignore missing %}
        {% block seo %}{% endblock %}
        {% block styles %}{% endblock %} 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Top navigation bar from include --&amp;gt;&lt;/span&gt;
            {% include 'includes/nav.html' ignore missing %}
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Messages flashed to the user --&amp;gt;&lt;/span&gt;
            {% include 'includes/messages.html' ignore missing %}
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Landing page intro, carousel and other  --&amp;gt;&lt;/span&gt;
            {% block intro %}{% endblock %}
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Main content block --&amp;gt;&lt;/span&gt;
            {% block content %}{% endblock %}
            {% block contact %}{% endblock %}
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Footer from include --&amp;gt;&lt;/span&gt;
            {% include 'includes/footer.html' ignore missing %}
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- jQuery (jQuery may be replaced with other modern JS library to manipulate DOM i.e. `vue.js`) --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/JavaScript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static', filename='js/jquery-3.2.1.min.js') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- popper --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/JavaScript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static', filename='js/popper.min.js') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Bootstrap core JavaScript --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/JavaScript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static', filename='js/bootstrap.min.js') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- MDB core JavaScript --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/JavaScript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static', filename='js/mdb.min.js') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Google Maps--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://maps.google.com/maps/api/js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            {% block scripts %}
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Smooth scrolling to the target anchor --&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'html, body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                            &lt;span class=&quot;na&quot;&gt;scrollTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'href'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            {% endblock %}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;head-section&quot;&gt;Head section&lt;/h3&gt;

&lt;p&gt;Some fragments of HTML are moved to separate &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; files to keep main template lean and understandable. Fragments like main navigation bar or footer can be quite large and it could affect code readability. Base includes are located in &lt;code class=&quot;highlighter-rouge&quot;&gt;app/templates/includes/&lt;/code&gt; and will be described separately.&lt;/p&gt;

&lt;p&gt;Alongside large &lt;code class=&quot;highlighter-rouge&quot;&gt;meta.html&lt;/code&gt; include there are other blocks building head section of the page. They will differ for specific pages. All special parts of head section are enclosed in separate code blocks: &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;seo&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;styles&lt;/code&gt; blocks. Title dynamically manages page title on the tab. SEO is responsible for specific meta information related to page promoting in social media i.e Open Graph tags and other &lt;code class=&quot;highlighter-rouge&quot;&gt;meta&lt;/code&gt; properties used during linking specific page in popular services. If people want to share it on Facebook, LinkedIn, WhatsApp etc, we can control the appearance of “sharing previews” of a website by means of Open Graph meta tags. There is also additional &lt;code class=&quot;highlighter-rouge&quot;&gt;styles&lt;/code&gt; block, which is empty in basic template, but allows to incorporate additional css for each child page.&lt;/p&gt;

&lt;p&gt;Meta part from head section of the page contains meta information common for entire project, like links to the style sheets or fonts, information for proper indexing by search engines or gathering page statistics i.e. from Google analytics:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/includes/meta.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Social media analytic tool&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Michal Dyzma&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Fonts --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family='Fontdiner+Swanky'&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Bootstrap CSS --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;stylesheet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;text/css&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static', filename='css/bootstrap.min.css') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Bootstrap Material Design --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;stylesheet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;text/css&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static', filename='css/mdb.min.css') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Your custom styles (optional) --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;stylesheet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;text/css&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static', filename='css/style.css') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static', filename='favicon.ico') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Order of linked css is important. The latter file will overwrite same functionalities from the previous one.&lt;/p&gt;

&lt;h3 id=&quot;body-section&quot;&gt;Body section&lt;/h3&gt;

&lt;p&gt;Body section contains several distinct blocks: &lt;code class=&quot;highlighter-rouge&quot;&gt;navbar.html&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;messages.html&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;intro&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;footer.html&lt;/code&gt;. Last is &lt;code class=&quot;highlighter-rouge&quot;&gt;scripts&lt;/code&gt; block which allows to include site specific JS scripts at the end of the page. It is considered best practice to place JS scripts near closing body tag, which speeds up page loading and ensures, that all page is already rendered, when scripts start to invoke &lt;strong&gt;DOM (Document Object Model)&lt;/strong&gt; operations.&lt;/p&gt;

&lt;p&gt;Main navigation bar is common for all pages in the app and will be fixed at the top of the site. It is pretty standard navigation bar, based on Bootstrap and MDB. There is also some Flask helper function enclosed in Jinja variable &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;url_for('index')&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt; to manage finding url for main entry point for our application, which is landing page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/includes/nav.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbar navbar-expand-lg navbar-dark elegant-color-dark justify-content-between&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbar-brand&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('index') }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font-family:'Fontdiner Swanky', cursive;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;MD ANALYTICS&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbar-toggler&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-toggle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#navbarSupportedContent&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-controls=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbarSupportedContent&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Toggle navigation&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbar-toggler-icon&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse navbar-collapse&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbarSupportedContent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbar-nav mr-auto&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://md_analytics.readthedocs.io/en/latest/?badge=latest&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Documentation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://github.com/mdyzma/md_analytics&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;GitHub&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('public.home') }}#contact&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbar-nav ml-auto&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Login&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sign Up!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/navbar.png&quot; alt=&quot;main-navigation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Later we will expand it with some logic for sessions and accessing restricted pages.&lt;/p&gt;

&lt;p&gt;Messages box, will display all communicates produced by application. Every feedback improves tremendously user experience with the app. It consists of simple div and some Jinja logic to manage messages produced by Flask:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/includes/messages.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    {% with messages = get_flashed_messages(with_categories=true) %}
        {% if messages %}
            {% for category, message in messages %}
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;alert alert-{{ category }} alert-dismissible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;role=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;alert&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;close&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-dismiss=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;alert&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Close&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-hidden=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;times;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                    {{ message }}
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            {% endfor %}
        {% endif %}
    {% endwith %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At some point we will also try to include contact information. For now it is map with marked location (using Google Map API) and some contact details.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/includes/contact.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--Section: Contact--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;contact pb-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--First column--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md-8 mb-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;map-container&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;z-depth-1 wow fadeIn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;height: 300px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/First column--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Second column--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-center list-unstyled&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wow fadeIn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.2s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fa fa-map-marker teal-text fa-lg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Gen. Grochowskiego 55/55&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Piaseczno, 55-555 , Poland&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wow fadeIn mt-5 pt-2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.3s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fa fa-phone teal-text fa-lg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;+ 48 555 55 55 55&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wow fadeIn mt-5 pt-2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.4s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fa fa-envelope teal-text fa-lg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;mdyzma@gmail.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/Second column--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--Section: Contact--&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/contact.png&quot; alt=&quot;contact&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Footer part will be also common to all pages. It will include some extended information about policies, social media links and other standard “footer content”. Code snippet bellow is just simple copyright tag and two column structure for extended content.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/includes/footer.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--Footer--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;page-footer blue center-on-small-only&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Footer Links--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container-fluid&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--First column--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;h5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;MD Analytics&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h5&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Here you can use rows and columns here to organize your footer content.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.First column--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Second column--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;h5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Links&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h5&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#!&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Link 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#!&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Link 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#!&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Link 3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#!&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Link 4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.Second column--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.Footer Links--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Copyright--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;footer-copyright&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container-fluid&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;copy 2017 Copyright: &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.MDBootstrap.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; MDBootstrap.com &lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;amp Michal Dyzma&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.Copyright--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.Footer--&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/footer.png&quot; alt=&quot;footer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is just an example from MDB tutorial. Exact code for footer can be downloaded from the &lt;a href=&quot;https://github.com/mdyzma/md_analytics/blob/master/app/templates/includes/footer.html&quot;&gt;footer template on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Putting it all together we are ready to create first page for our app - the landing page!&lt;/p&gt;

&lt;h2 id=&quot;landing-page&quot;&gt;Landing page&lt;/h2&gt;

&lt;p&gt;It is time to expand main application and put in use templates created above. First we will create web page endpoints, add some basic extensions to it and display everything as a nice, responsive landing page.&lt;/p&gt;

&lt;h3 id=&quot;blueprint&quot;&gt;Blueprint&lt;/h3&gt;

&lt;p&gt;Earlier, when project organization was explained I mentioned all components will reside in their own folders to maximize portability. Landing page (home) resides in &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; folder and this part of the application can be accessed by anyone. Folder contains blueprint for landing page and login/register forms. Folder with the same name was also placed in &lt;code class=&quot;highlighter-rouge&quot;&gt;templates/&lt;/code&gt;, to store necessary html boilerplate. To move this functionality  to other app one has to copy both public folder to new location and make necessary imports.&lt;/p&gt;

&lt;p&gt;Blueprint contains all routing for the pages that have something common. For now  our landing page contains only few routs: &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; to render &lt;strong&gt;home&lt;/strong&gt; page, &lt;code class=&quot;highlighter-rouge&quot;&gt;/login&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/register&lt;/code&gt; to display &lt;strong&gt;login&lt;/strong&gt; and &lt;strong&gt;register&lt;/strong&gt; forms. For now each method renders specific template. Login and register will be updated in the next section, where we will add data storage layer, safe database communication and sessions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/app/public/views.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Blueprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Blueprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static_folder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'../static'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@home.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Home page.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public/home.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@home.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Login form.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public/login.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@home.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Register form.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public/register.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@home.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Logout link.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'home'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
Once all endpoints and functions are ready, we have to register blueprint with main app. But before we do that, lets refactor our app. We will use several flask extensions, which will help to develop certain functionalities very fast. There is no need to develop wheel again. Instead of writing our own data-base models, login classes etc, we can use already existing solutions i.e. extensions. Extensions will reside in separate file &lt;code class=&quot;highlighter-rouge&quot;&gt;extensions.py&lt;/code&gt;, where they will be instantiated. Separate function will bind existing extension instances with the current app. First lets create extension’s package:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/app/extensions.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask_debugtoolbar&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DebugToolbarExtension&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;debug_toolbar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DebugToolbarExtension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We will repeat this pattern with all Flask extensions. Having extensions ready we can register everything with main application:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/app/app.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app.extensions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug_toolbar&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;register_extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register_extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Register Flask extensions.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;debug_toolbar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Debug toolbar initialized&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register_blueprints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Register Flask blueprints.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;register_blueprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This file will initialize flask app, register all extensions and blueprints to the current context. We can print all endpoints using &lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py show-urls&lt;/code&gt; command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python manage.py show-urls

--------------------------------------------------------------------------------
DEBUG &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;app &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;/home/mdyzma/md_analytics/app/app.py:27]:
Debug toolbar initialized
--------------------------------------------------------------------------------
Rule                                          Endpoint
---------------------------------------------------------------------------
/                                             public.home
/login                                        public.login
/logout                                       public.logout
/register                                     public.register
&lt;span class=&quot;gp&quot;&gt;/static/&amp;lt;path:filename&amp;gt;                       &lt;/span&gt;static
&lt;span class=&quot;gp&quot;&gt;/static/&amp;lt;path:filename&amp;gt;                       &lt;/span&gt;public.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;template&quot;&gt;Template&lt;/h3&gt;

&lt;p&gt;Landing page template is located in &lt;code class=&quot;highlighter-rouge&quot;&gt;templates/public/home.html&lt;/code&gt;. Because it inherits all traits of &lt;code class=&quot;highlighter-rouge&quot;&gt;layout.html&lt;/code&gt; it will contain only elements which differ between this two templates. Rest will be provided from base. First we should tell Jinja what template we are extending and populate current home template with site-specific content. Lets add “intro” for our page:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/public/home.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;{% extends &quot;layout.html&quot; %}
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Title for each page --&amp;gt;&lt;/span&gt;
{% block title %}Home{% endblock %}
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Site Specific Styles --&amp;gt;&lt;/span&gt;
{% block styles %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* TEMPLATE STYLES */&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.flex-center&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.intro-1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(&quot;https://mdbootstrap.com/img/Photos/Horizontal/Work/full page/img%20(2)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;no-repeat&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
{% endblock %}
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--Intro Section--&amp;gt;&lt;/span&gt;
{% block intro %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;view intro-1 hm-black-strong&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;full-bg-img flex-center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h1-responsive font-bold wow fadeInDown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.2s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;What is your story?&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lead mt-4 mb-5 wow fadeInDown&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Learn what kind of footprint you created in the web...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://mdbootstrap.com/getting-started/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-primary btn-lg wow fadeInLeft&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.2s&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nofollow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sign up!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://mdbootstrap.com/material-design-for-bootstrap/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-default btn-lg wow fadeInRight&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.2s&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nofollow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Learn more&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
{% endblock %}&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Intro should be fully scalable and adjust to the screen width. We can expand page further, adding other typical elements like About section, cards with features, testimonials etc…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/intro.png&quot; alt=&quot;intro&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;content&lt;/code&gt; block will only have some random &lt;strong&gt;“About”&lt;/strong&gt; section and some &lt;strong&gt;“contact”&lt;/strong&gt; info with simple Google map with a marker. It is just exemplary content from MDB tutorial to show framework’s capabilities. I would like to focus this blog series more on back-end part of the project, therefore front will be limited to the bare minimum.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/public/home.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Content --&amp;gt;&lt;/span&gt;
{% block content %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;divider-new pt-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h2-responsive wow fadeIn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.2s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;About me&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Section: About--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;about&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-center wow fadeIn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.2s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit explicabo assumenda eligendi ex exercitationem harum deleniti quaerat beatae ducimus dolor voluptates magnam, reiciendis pariatur culpa tempore quibusdam quidem, saepe eius.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit explicabo assumenda eligendi ex exercitationem harum deleniti quaerat beatae ducimus dolor voluptates magnam, reiciendis pariatur culpa tempore quibusdam quidem, saepe eius.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Section: About--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- dummy section for link --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
       &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;divider-new pt-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h2-responsive wow fadeIn&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Best features&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Section: Best features--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;best-features&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row pt-3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--First columnn--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-lg-3 mb-r&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card--&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card wow fadeIn&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card image--&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;img-fluid&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://mdbootstrap.com/img/Photos/Horizontal/Work/4-col/img%20(25).jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Card image cap&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card content--&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-body&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Title--&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-title text-center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;360 Advertising&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Text--&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.Card--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--First columnn--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Second columnn--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-lg-3 mb-r&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card--&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card wow fadeIn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.2s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card image--&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;img-fluid&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://mdbootstrap.com/img/Photos/Horizontal/Work/4-col/img%20(14).jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Card image cap&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card content--&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-body&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Title--&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-title text-center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Top-class Team&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Text--&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.Card--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Second columnn--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Third columnn--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-lg-3 mb-r&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card--&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card wow fadeIn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.4s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card image--&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;img-fluid&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://mdbootstrap.com/img/Photos/Horizontal/Work/4-col/img%20(21).jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Card image cap&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card content--&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-body&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Title--&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-title text-center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Top-class Team&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Text--&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.Card--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Third columnn--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--First columnn--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-lg-3 mb-r&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card--&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card wow fadeIn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-wow-delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.6s&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card image--&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;img-fluid&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://mdbootstrap.com/img/Photos/Horizontal/Work/4-col/img%20(37).jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Card image cap&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Card content--&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-body&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Title--&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-title text-center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;24/7 Support&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Text--&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card-text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/.Card--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--First columnn--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/Section: Best features--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;contact&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- dummy section for link --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;divider-new&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h2-responsive wow fadeIn&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        {% block contact %}
            {% include 'includes/contact.html' %}
        {% endblock %}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--/ Main container--&amp;gt;&lt;/span&gt;
{% endblock %}&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/content.png&quot; alt=&quot;content&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Last but not least, lets add JS script to navigate Google map and place marker in position of our choice. More about Google maps APIs can be found &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/adding-a-google-map&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/public/home.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;{% block scripts %}
    {{ super() }}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;var_location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LatLng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;52.0690115&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;21.0198418&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,);&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;var_mapoptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;var_location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;zoom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;var_marker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;var_location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;var_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;New York&quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;var_map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;map-container&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;var_mapoptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;var_marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;var_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addDomListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'load'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
{% endblock %}&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You may have noticed &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;super()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt; expression in scripts block. In &lt;code class=&quot;highlighter-rouge&quot;&gt;layout.html&lt;/code&gt; I placed some JS code to be present in all pages. Code is responsible for smooth scrolling to the page internal link. Calling &lt;code class=&quot;highlighter-rouge&quot;&gt;super()&lt;/code&gt; allows to keep all previous content of the block from previous template and append new content to it. So we have smooth scrolling and Google maps initialization. For now we have only two functions, so it is reasonable to keep them in template code. But when amount of custom JS grows it is better to migrate to separate &lt;code class=&quot;highlighter-rouge&quot;&gt;.js&lt;/code&gt; file and serve it from static folder same as framework files.&lt;/p&gt;

&lt;p&gt;Obviously I am no web designer, but this simple stub should do the trick. Also we can see that  Bootstrap and MDB gave us nice look and responsive design (hamburger button which expands to full navigation bar when shrunk below 768 pixels, material style of the buttons and navigation bar). There is additional element on the page - a very nice tool to debug flask web applications called &lt;code class=&quot;highlighter-rouge&quot;&gt;Flask-debugtoolbar&lt;/code&gt;. It should be listed in dev requirements and installed automatically during environment configuration. It appears on the page as a button at the right top corner and allows to track current Flask session including app configuration, requests, routing, variables and many more.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/home-fdt.png&quot; alt=&quot;home-fdt&quot; /&gt;&lt;/p&gt;

&lt;!-- 

### Testing landing page
 --&gt;

&lt;h2 id=&quot;login-register-forms&quot;&gt;Login, Register forms&lt;/h2&gt;

&lt;p&gt;It is time to secure our app. Basic tools for us will be login/register mechanism, which will allow app to securely exchange information with the server, second would be creating sessions and above all encryption of data exchange. To extract information from the server app uses HTTP &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; method, whereas to send information to the server it uses &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; method. There are other methods used in HTTP protocol, but we will focus on these two for now. Login and register forms will base on this two to communicate with the database, which will store information about users (see next &lt;a href=&quot;#user-data-management&quot;&gt;section&lt;/a&gt;). Only logged users will be allowed to see dashboard. In addition logged users can see their own profile with the data app is keeping about them. Lets start with login page.&lt;/p&gt;

&lt;h3 id=&quot;login&quot;&gt;Login&lt;/h3&gt;

&lt;p&gt;First lets create login page with all fields, nothing fancy, just simple form with a bit of styling:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/login.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;{% extends &quot;layout.html&quot; %}
{% set title = &quot;Register&quot; %}
{% block intro %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;view&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;padding-top: 75px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Login&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Email: &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Password: &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
{% endblock %}&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/login.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;register&quot;&gt;Register&lt;/h3&gt;

&lt;p&gt;Now very, very simple register form:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/templates/register.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;{% extends &quot;layout.html&quot; %}
{% set title = &quot;Register&quot; %}
{% block intro %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;view&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;padding-top: 75px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Create account&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Name: &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Email: &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Password: &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Re-type Password: &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
{% endblock %}&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-08-12/register.png&quot; alt=&quot;register&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Again, this code does nothing, except it looks good in the browser. All the magic like validation, verification will happen  behind the stage, described in details in next sections.&lt;/p&gt;

&lt;h3 id=&quot;mongodb&quot;&gt;MongoDB&lt;/h3&gt;

&lt;p&gt;Before we dive into login/register python machinery I would like to address few topics related to this issue. First is database choice. I decided to store user provided information and data received from social media providers in NoSQL database - &lt;a href=&quot;https://www.mongodb.com&quot;&gt;MongoDB&lt;/a&gt;. Main reason is that different providers have different data models. Friends, followers lists, text or media content of the posts, software repositories. Variety makes nearly impossible to fit them in some sane common relational database. In MongoDB, JSON like format of the data is playing nicely with the data format given by providers (API requests return JSON responses). JSON can be easily manipulated in python and converted tot he dictionary container. It is also very easy to store and manipulate graph-type data. To communicate with db we will use excellent Flask extension: &lt;a href=&quot;http://flask-pymongo.readthedocs.io/en/latest/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flask_pymongo&lt;/code&gt;&lt;/a&gt;. Pip install it &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install flask_pymongo&lt;/code&gt; if package is not installed on your system.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
This step assumes, you have MongoDB server up and running on your local machine. Refer to &lt;a href=&quot;https://docs.mongodb.com/manual/administration/install-community/&quot;&gt;&lt;strong&gt;MongoDB documentation&lt;/strong&gt;&lt;/a&gt; for installation details.
&lt;/div&gt;

&lt;p&gt;First lets register PyMongo extension (and add &lt;code class=&quot;highlighter-rouge&quot;&gt;flask_pymongo==0.5.1&lt;/code&gt; to the requirements list in production):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/app/extensions.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask_pymongo&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyMongo&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mongo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyMongo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And add to &lt;code class=&quot;highlighter-rouge&quot;&gt;register_extensions()&lt;/code&gt; in main application:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/app/app.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;      
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app.extensions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug_toolbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mongo&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register_extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Register Flask extensions.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;debug_toolbar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Debug toolbar initialized&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mongo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Debug mongo initialized&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will attach PyMongo db to the current app using default name or name specified in &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt; file.&lt;/p&gt;

&lt;h3 id=&quot;sessions&quot;&gt;Sessions&lt;/h3&gt;

&lt;p&gt;Sometimes  URL’s contain additional parameters submitted in the URL (i.e &lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.domain.com/endpoint?key=value&lt;/code&gt;). One can access them via Flask request object (&lt;code class=&quot;highlighter-rouge&quot;&gt;request.args&lt;/code&gt; attribute) and store them in the cookies attribute (&lt;code class=&quot;highlighter-rouge&quot;&gt;request.cookies&lt;/code&gt;) for later usage. However using cookies is not preferred to store requests data, especially sensitive one like credentials or authorization tokens, therefore it is recommended to use more secure solution and it is__session__.&lt;/p&gt;

&lt;p&gt;Session stores request parameters specific to a user from one request to the next. But it does it in more secure way, by adding additional security layer on top of cookies. To secure data serialized in cookie it uses secret key provided by the app. User can not modify session parameters, unless has access to this key. In our case we will use app configuration to set strong secret key with &lt;code class=&quot;highlighter-rouge&quot;&gt;os.urandom(24)&lt;/code&gt;, which generates 24 random bytes suitable for cryptographic use. We set this parameter as a &lt;code class=&quot;highlighter-rouge&quot;&gt;SECRET_KEY&lt;/code&gt; in base class of the config file. Configuration key is inherited by all child classes, and passed further to each app instance upon app creation by &lt;code class=&quot;highlighter-rouge&quot;&gt;create_app()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Session or cookie usually resides on client side. We will go one step further and use Flask extension to manage server side sessions in our app. Because our app is meant to analyze social media data, it will certainly have to be able to gather and process amounts of data above average cookie capacity (counted in tens or even hundreds of MB). And we do not want to send hundreds of megabytes through Internet from our server, where app runs, to the clients browser. To make it possible we will use very handy Redis NoSQL database, which can operate in memory and store data in form of key:value pairs. Here we will use Redis to store session data. Extension will hook up to the app and allow to use it through standard Flask session object.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
To run application locally, you need to have Redis server running on your local machine. Refer to Redis documentation for &lt;a href=&quot;https://redis.io/documentation&quot;&gt;installation details&lt;/a&gt;.
&lt;/div&gt;

&lt;p&gt;Fortunatelly we do not have to write our own Redis interface to interact with it. Flask-Session will take care for it, using some default settings and some values taken from app configuration. However few things must be done to use Redis as a server side session storage:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;SESSION_TYPE = 'redis'&lt;/code&gt; to the config file&lt;/li&gt;
  &lt;li&gt;Download, install and add Flask-Session extension (don’t forget to add Flask-Session==0.3.1 to &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements/prod.txt&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;/app/settings.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SECRET_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urandom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SESSION_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'redis'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once it is done we can append &lt;code class=&quot;highlighter-rouge&quot;&gt;extensions.py&lt;/code&gt;with Flask-Session initialization:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/app/extensions.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask_session&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and register it with the app:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/app/app.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app.extensions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug_toolbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mongo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login_manager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register_extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Register Flask extensions.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;debug_toolbar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mongo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;login_manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally lets use it in our app. Lets make session to store users data during registration and then compare them during signing in. This is just temporary solution, to show how session works. Our primary storage will be MongoDB and Redis will serve as a cache to keep some data obtained from API’s of social media providers. Processed data will be also stored in MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/app/public/views.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Blueprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;blueprint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Blueprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static_folder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'../static'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@blueprint.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Home page.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public/home.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@blueprint.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Login page.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public/login.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@blueprint.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Register page.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public/register.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@blueprint.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;logout link.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'home'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;flask-login&quot;&gt;Flask-Login&lt;/h3&gt;

&lt;p&gt;To restrict&lt;/p&gt;
&lt;h3 id=&quot;data-storage&quot;&gt;Data storage&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;MongoDB,&lt;/li&gt;
  &lt;li&gt;security with bcrypt - password passed in POST http call.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;/app/settings.py&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;user-model&quot;&gt;User model&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree .
.
|-- app/
|   |-- user/
|   |   |
|   |   |-- static/
|   |   |
|   |   |-- templates/
|   |   |   |
|   |   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- user.html
|   |   |
|   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- views.py
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;!-- Links --&gt;

&lt;!-- Images --&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Michal Dyzma</name>
          
          
        </author>
      

      
        <category term="python" />
      
        <category term="social-media" />
      
        <category term="Flask" />
      
        <category term="Jinja2" />
      
        <category term="MongoDB" />
      

      

      
        <summary type="html">Flask application presenting social media accounts analysis in form of dashboard. It transforms various data sources into clear and concise report. Part II describes creation of landing page and dashboard, including blueprints pattern, jinja templates, login/register mechanism and data storage in development and production.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Social media analysis with Flask, Part I</title>
      
      <link href="http://localhost:4000/2017/07/07/social-media-analysis-part-I/" rel="alternate" type="text/html" title="Social media analysis with Flask, Part I" />
      <published>2017-07-07T11:11:47+02:00</published>
      <updated>2017-07-07T11:11:47+02:00</updated>
      <id>http://localhost:4000/2017/07/07/social-media-analysis-part-I</id>
      <content type="html" xml:base="http://localhost:4000/2017/07/07/social-media-analysis-part-I/">&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/banner.png&quot; alt=&quot;banner&quot; /&gt;&lt;br /&gt;&lt;br /&gt;
Flask application presenting social media accounts analysis in form of dashboard. It transforms various data sources into clear and concise report. &lt;strong&gt;This part&lt;/strong&gt; describes backbone of the application, which is basic Flask configuration, Travis Continuous Integration (with tests) and Heroku Continuous Deployment to multiple environments with a single button. It is under version control, tested and CI/CD ready.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
Source files for this article can be downloaded from this &lt;a href=&quot;https://github.com/mdyzma/md_analytics/releases/tag/v0.0.3&quot;&gt;GitHub repository&lt;/a&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;series-consists-of&quot;&gt;Series consists of:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://localhost:4000/2017/07/07/social-media-analysis-part-I/&quot;&gt;Social media analysis with Flask, Part I&lt;/a&gt; (Setting environment, flask, Travis CI/Heroku CD )&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://localhost:4000/2017/08/12/social-media-analysis-part-ii/&quot;&gt;Social media analysis with Flask, Part II&lt;/a&gt; (Templates, login/register mechanism, data storage)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;part-i&quot;&gt;Part I&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#application-description&quot;&gt;Application description&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#setting-up-a-development-environment&quot;&gt;Setting up a development environment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#basic-file-structure&quot;&gt;Basic file structure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#setting-flask-application&quot;&gt;Setting Flask application&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#install-flask&quot;&gt;Install Flask&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#configuration-management&quot;&gt;Configuration management&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#flask-app-factory&quot;&gt;Flask app factory&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#test-flask-app&quot;&gt;Test Flask app&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heroku-deployment&quot;&gt;Heroku deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#continuous-integration&quot;&gt;Continuous integration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#summary&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;!-- &lt;a name=&quot;description&quot;&gt;&lt;/a&gt; --&gt;

&lt;h2 id=&quot;application-description&quot;&gt;Application description&lt;/h2&gt;

&lt;p&gt;Web application displaying summary of the social media account analysis. Analyzed properties include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;time-line statistics&lt;/li&gt;
  &lt;li&gt;posts semantic analysis&lt;/li&gt;
  &lt;li&gt;account followers list (names, number of connections)&lt;/li&gt;
  &lt;li&gt;account friends list (names, number of connections)&lt;/li&gt;
  &lt;li&gt;followers graph&lt;/li&gt;
  &lt;li&gt;friends graph&lt;/li&gt;
  &lt;li&gt;friends/followers cross-check between different services&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;roles-specification&quot;&gt;Roles specification&lt;/h3&gt;

&lt;p&gt;Story to implement:
As a user I want to see results of my social media account analysis in form of dashboard page.
Steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I go to “/” page&lt;/li&gt;
  &lt;li&gt;I see “Landing page” with “sign in” and register” buttons&lt;/li&gt;
  &lt;li&gt;I press “sign in” button
    &lt;ul&gt;
      &lt;li&gt;I am redirected to “/signin” page&lt;/li&gt;
      &lt;li&gt;I enter credentials&lt;/li&gt;
      &lt;li&gt;I am redirected to “/dashboard/user”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I press Register” button
    &lt;ul&gt;
      &lt;li&gt;I am redirected to “/register” page&lt;/li&gt;
      &lt;li&gt;I enter credentials&lt;/li&gt;
      &lt;li&gt;I am redirected to “/dashboard/user” page&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I see “Connect &lt;SocialMediaName&gt;  account&quot; button, where SocialMediaName is i.e. Twitter, Facebook,  GitHub or LinkedIn&lt;/SocialMediaName&gt;&lt;/li&gt;
  &lt;li&gt;I follow oAuth flow authorization&lt;/li&gt;
  &lt;li&gt;I get redirected to “/dashboard/user/[SocialMediaName] page&lt;/li&gt;
  &lt;li&gt;I see :
    &lt;ul&gt;
      &lt;li&gt;timeline statistics (number of my posts, % of posts wit response etc.)&lt;/li&gt;
      &lt;li&gt;general assessment of all my posts (positive, neutral, negative)&lt;/li&gt;
      &lt;li&gt;social network analysis i.e. followers and/or friends statistics (counts of both groups)&lt;/li&gt;
      &lt;li&gt;a drop-down menu to display list of my:
        &lt;ul&gt;
          &lt;li&gt;if applicable - followers. Each contains:
            &lt;ul&gt;
              &lt;li&gt;A name i.e. Twitter handle, like “&lt;strong&gt;@foo&lt;/strong&gt;” or Facebook screen name&lt;/li&gt;
              &lt;li&gt;A number of followers following this person&lt;/li&gt;
              &lt;li&gt;A number of my followers, that this person follows (example, Bob and Rick follow me, Andrew follows both of them, the number is 2).&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;if applicable - my friends, each contains:
            &lt;ul&gt;
              &lt;li&gt;A Twitter handle, like “&lt;strong&gt;@foo&lt;/strong&gt;” or Facebook screen name&lt;/li&gt;
              &lt;li&gt;A number of friends of this person&lt;/li&gt;
              &lt;li&gt;Common friends number&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;followers graph (users as nodes, connections as edges)&lt;/li&gt;
      &lt;li&gt;friends graph (users as nodes, connections as edges)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I can export chosen list to the JSON or CVS file&lt;/li&gt;
  &lt;li&gt;I can export chosen graph to JSON or CVS&lt;/li&gt;
  &lt;li&gt;I can log out from the session&lt;/li&gt;
  &lt;li&gt;When I log out I am directed to “/” page&lt;/li&gt;
  &lt;li&gt;When I am logged in I can see my user settings link and display it in “/user/name” address&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;other-requirements&quot;&gt;Other requirements&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Application should be Heroku-deployable (please provide a link to the working deployment in the README).&lt;/li&gt;
  &lt;li&gt;Application should be documented.
    &lt;ul&gt;
      &lt;li&gt;Quick-start guide to deploy own version of the application&lt;/li&gt;
      &lt;li&gt;User manual how to operate deployed application&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Application should be tested (min 90% test coverage)&lt;/li&gt;
  &lt;li&gt;Application should be Version controlled (git)&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- &lt;a name=&quot;setting&quot;&gt;&lt;/a&gt; --&gt;

&lt;h2 id=&quot;setting-up-a-development-environment&quot;&gt;Setting up a development environment&lt;/h2&gt;

&lt;p&gt;Make sure that Python is installed. After Python we have to make sure we have all necessary packages. Simple &lt;code class=&quot;highlighter-rouge&quot;&gt;pip list&lt;/code&gt; will show all installed packages. New Python distributions come with basic package manager &lt;code class=&quot;highlighter-rouge&quot;&gt;pip&lt;/code&gt; and tools helping in packages distribution: &lt;code class=&quot;highlighter-rouge&quot;&gt;setuptools&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;wheel&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip list
DEPRECATION: The default format will switch to columns &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the future. You can use --format&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;legacy|columns&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;or define a &lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;legacy|columns&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;your pip.conf under the &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;list] section&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; to disable this warning.

pip &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;9.0.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
setuptools &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;36.2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
wheel &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.30.0a0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Another very important tool is &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt;, which will help us to deal with dependency issues. Virtualenv makes it easy to control which versions of Python as well as the third-party packages are used by the project. Another consideration is that installing packages system-wide generally requires elevated privileges (sudo pip install bazz). By using virtualenvs, you can create Python environments and install packages as a regular user. But first virtualenv must be install in your system Python:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox ~]# sudo pip install virtualenv
Collecting virtualenv
  Downloading virtualenv-15.1.0-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.8MB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% |################################| 1.8MB 290kB/s
Installing collected packages: virtualenv
Successfully installed virtualenv-15.1.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;virtual-environments-management&quot;&gt;Virtual environments management&lt;/h3&gt;

&lt;p&gt;Now that we have the proper tools installed, we are ready to create our first Flask application. First of all we need virtual environment specific for our application. It is a good practice to separate environment’s working directory (with all installed packages) and application folder, simply to avoid putting heavy folders under version control. Some virtual environments can have hundreds of MB and there is no use to keep track of them. Alternatively we can create virtual environment in projects folder and add this folder to the &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file. What I usually do is to create separate &lt;code class=&quot;highlighter-rouge&quot;&gt;.envs&lt;/code&gt; folder in user’s home directory and keep all virtual envs there.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox /]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virtualenv ~/.envs/md_analytics
New python executable &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/mdyzma/.envs/md_analytics/bin/python2
Also creating executable &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/mdyzma/.envs/md_analytics/bin/python
Installing setuptools, pip, wheel...done.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we can activate &lt;code class=&quot;highlighter-rouge&quot;&gt;md_analytics&lt;/code&gt; virtual environment:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox /]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.envs/md_analytics/bin/activate
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox /]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From now on, whenever we want to work on our app and environment is not activated, we have to activate it first. Changed prompt will inform us that now we use “local” python. All packages installed in active environment will be connected to it. To deactivate environment simply type &lt;code class=&quot;highlighter-rouge&quot;&gt;source deactivate&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;basic-file-structure&quot;&gt;Basic file structure&lt;/h2&gt;

&lt;p&gt;It is not required from Flask application to follow particular folder structure like Django application. Only thing is, files should keep names understood by Flask. Although it is not required, it is advised to structure app a bit to ensure maximum modularity and speed up development, testing etc. Our app structure comprises of three large parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;docs&lt;/strong&gt; - package documentation linked to &lt;a href=&quot;http://md-analytics.readthedocs.io/en/latest/?badge=latest&quot;&gt;ReadTheDocs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;app&lt;/strong&gt; module - the app itself wih login, register and dashboard , user components&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;requirements&lt;/strong&gt; - dependencies for each environment&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;tests&lt;/strong&gt; - suit of test for entire app&lt;/li&gt;
  &lt;li&gt;boilerplate files for version control, coverage metrics and deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;General structure is listed below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree .
.
|
|-- docs/
|   |-- make.bat
|   |-- Makefile
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;/
|       |-- _static/
|       |-- _templates/
|       |-- conf.py
|       &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- index.rst
|
|-- app/
|   |-- static/
|   |-- templates/
|   |-- __init__.py
|   |-- app.py
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- settings.py
|
|-- requirements/
|   |-- dev.txt
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- prod.txt
|
|-- tests/
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- app/
|       |-- test_app.py
|       &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- test_settings.py
|
|-- __init__.py
|-- .gitignore
|-- .travis.yml
|-- app.json
|-- LICENSE
|-- manage.py
|-- Procfile
|-- Procfile.windows
|-- README.md
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Most of the files in this make up are self-explanatory. There are some files like &lt;code class=&quot;highlighter-rouge&quot;&gt;app.json&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Procfile&lt;/code&gt;which are elements of &lt;a href=&quot;https://www.heroku.com&quot;&gt;Heroku&lt;/a&gt; machinery and will be described in detail later. Rest belong to the elements of VCS or CI  and ensure smooth development. Table with files description is given below:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;File&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;app.json&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orchestrates steps involved in automatic deployment to Heroku.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Procfile&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Declares commands run by application on the Heroku platform.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;manage.py&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Entry-point for executing our application&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;.travis.yml&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Instructions for TravisCI service&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;docs/conf.py&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Sphinx configuration&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;app/app.py&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Flask app factory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;app/settings.py&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Flask application configuration variables&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;

&lt;p&gt;We use git to version control. Basics of git are beyond the scope of this article. Please refer to excellent &lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control&quot;&gt;git tutorial&lt;/a&gt;. Here I would like to focus on GitHub aspects related to project management. GitHub offers issues and projects support. Issues are more about specific bugs or features reported by users/developers, while project shows general status of the work progress. Issues can be grouped in milestones, which usually denote specific software release. Very useful for time management.&lt;/p&gt;

&lt;p&gt;Here are some issues, which are “enhancements” of the app from current version &lt;strong&gt;v0.0.2&lt;/strong&gt; (working skeleton integrated with Travis and Heroku) to the pre-released alpha with landing page and dashboard functionalities &lt;strong&gt;v0.0.3&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/github-issues.png&quot; alt=&quot;github-issues&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;

&lt;p&gt;Project’s documentation is place in &lt;code class=&quot;highlighter-rouge&quot;&gt;docs&lt;/code&gt; folder and is based on excellent Python &lt;code class=&quot;highlighter-rouge&quot;&gt;Sphinx&lt;/code&gt; module. Folder is linked to &lt;a href=&quot;http://md-analytics.readthedocs.io/en/latest/?badge=latest&quot;&gt;ReadTheDocs&lt;/a&gt;, so that every change in GitHub repository initiates documentation rebuild. Hearth of the documentation is &lt;code class=&quot;highlighter-rouge&quot;&gt;conf.py&lt;/code&gt; file, where all extensions and static pages generator properties are configured. To manually start rebuild type:&lt;/p&gt;

&lt;p&gt;Creating basic documentation stub out of the box.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox docs]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sphinx-quickstart
Welcome to the Sphinx 1.6.3 quickstart utility.

Please enter values &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the following settings &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;just press Enter to
accept a default value, &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;one is given &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;brackets&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

...
Creating file ./source/conf.py.
Creating file ./source/index.rst.
Creating file ./Makefile.
Creating file ./make.bat.

Finished: An initial directory structure has been created.

You should now populate your master file ./source/index.rst and create other documentation
&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;files. Use the Makefile to build the docs, like so:
   make builder
where &lt;span class=&quot;s2&quot;&gt;&quot;builder&quot;&lt;/span&gt; is one of the supported builders, e.g. html, latex or linkcheck.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Following quick-start help, lets build basic html documentation:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make html

Running Sphinx v1.5.6
making output directory...
loading pickled environment... not yet created
building &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mo]: targets &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;0 po files that are out of date
building &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;html]: targets &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;1 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;files that are out of date
updating environment: 1 added, 0 changed, 0 removed
reading sources... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;100%] index
looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;now-outdated files... none found
pickling environment... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;checking consistency... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;preparing documents... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;writing output... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;100%] index
generating indices... genindex
writing additional pages... search
copying static files... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;copying extra files... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;dumping search index &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;English &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;code: en&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;dumping object inventory... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;build succeeded.

Build finished. The HTML pages are &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;build/html.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Content is written in &lt;strong&gt;reStructuredText&lt;/strong&gt; markup language. For more check &lt;a href=&quot;http://www.sphinx-doc.org/en/stable/rest.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;setting-flask-application&quot;&gt;Setting Flask application&lt;/h2&gt;

&lt;p&gt;Setting flask app is a multi-step process, which can be automated with some awesome python tools like &lt;a href=&quot;https://github.com/audreyr/cookiecutter#python&quot;&gt;cookiecutter&lt;/a&gt;, but here we will go step by step to learn it in detail. First we have planed basic application structure, now let’s install Flask and test installation, then create automatic configuration mechanism, semi-automatic dependencies installation and finally continuous integration and deployment of the app on TravisCI and Heroku. All tested and under version control (on GitHub).&lt;/p&gt;

&lt;h3 id=&quot;install-flask&quot;&gt;Install Flask&lt;/h3&gt;

&lt;p&gt;Activate virtual environment and install &lt;code class=&quot;highlighter-rouge&quot;&gt;Flask&lt;/code&gt; locally (command bellow will install this package and it’s dependencies):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox /]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install Flask
Collecting Flask
  Downloading Flask-0.12.2-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;83kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% |################################| 92kB 388kB/s
    ...

Successfully installed Flask-0.12.2 Jinja2-2.9.6 MarkupSafe-1.0 Werkzeug-0.12.2 click-6.7 itsdangerous-0.24&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Flask and its dependencies were installed. It is good to keep requirements in separate file, to ensure all necessary packages can be installed automatically with a single command and to not pollute application directory.&lt;/p&gt;

&lt;p&gt;Currently we have enough to run basic flask application. To test our environment lets write “Hello Flask” tryout. It will use basic routing mechanism to show “Hello Flask!” on the page. First Create &lt;code class=&quot;highlighter-rouge&quot;&gt;app&lt;/code&gt; package (with &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt;) and &lt;code class=&quot;highlighter-rouge&quot;&gt;app.py&lt;/code&gt; module in it. In the app.py  file type:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app/app.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Hello, Flask!'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This “toy” code creates instance of &lt;code class=&quot;highlighter-rouge&quot;&gt;Flask&lt;/code&gt; class which is the central object in any Flask project. It has all utilities necessary to start dynamic WSGI app. Running it will initiate local server with single route “/” answering all requests. Name of the view is index, since it is default name, that is looked up by all browsers. When we enter domain address (127.0.0.1:5000 in this case) flask will make sure that &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt; view is presented in response. Index view is whatever stands after &lt;code class=&quot;highlighter-rouge&quot;&gt;index()&lt;/code&gt; function return statement. If statement at the end of the file is Python convention that ensures that the app will run properly when it is called as a Python script from bash.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox app]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python app.py
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Running on http://127.0.0.1:5000/ &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Press CTRL+C to quit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Restarting with stat
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Debugger is active!
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Debugger PIN: 137-812-343
 127.0.0.1 - - &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;07/July/2017 13:19:25] &lt;span class=&quot;s2&quot;&gt;&quot;GET / HTTP/1.1&quot;&lt;/span&gt; 200 -
 127.0.0.1 - - &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;07/July/2017 13:19:26] &lt;span class=&quot;s2&quot;&gt;&quot;GET /favicon.ico HTTP/1.1&quot;&lt;/span&gt; 404 -&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… should start server on &lt;a href=&quot;http://127.0.0.1:5000/&quot;&gt;http://127.0.0.1:5000/&lt;/a&gt; saying &lt;strong&gt;Hello, Flask!&lt;/strong&gt; Main page was served properly (code 200) and because we do not have &lt;code class=&quot;highlighter-rouge&quot;&gt;favicon.ico&lt;/code&gt; file (yet!), browser could not find it, hence 404 error code. Although it is possible to start Flask application this way, we will use different mechanism in “real app”. This part was just checking if there are any issues with our environment and Flask installation. Luckily it worked! We are ready to create “real” application and real unit tests.&lt;/p&gt;

&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;/h3&gt;

&lt;p&gt;Requirements help speeding up application deployment. When source code is cloned from the pubic repository, all application dependencies are grouped in &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; file. Moreover CI services (including Heroku) need requirements file in application root folder to run app properly. The &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; in our application contains link to requirements folder with several files specifying separate sets of dependencies for different environments in which application can run. Link leads specifically to the &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements/prod.txt&lt;/code&gt;. However during development we will install packages listed in &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements/dev.txt&lt;/code&gt;, which of course includes production dependencies:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree .
.
|
|-- requirements
|   |-- dev.txt
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- prod.txt
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we will link &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements/prod.txt&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements/dev.txt&lt;/code&gt;, so that installing development dependencies will also install all required in production (which means when application is accessible for users).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;requirements.txt&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# requirements.txt&lt;/span&gt;

-r requirements/prod.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;requirements/prod.txt&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# requirements/prod.txt&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Everything needed in production&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Flask&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.12.2

&lt;span class=&quot;c&quot;&gt;# Deployment&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;gunicorn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;19.7.1

&lt;span class=&quot;c&quot;&gt;# App command line&lt;/span&gt;
Flask-Script&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;2.0.5&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We will add more dependencies while app grows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;requirements/dev.txt&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# requirements/dev.txt&lt;/span&gt;

-r prod.txt

&lt;span class=&quot;c&quot;&gt;# Debug&lt;/span&gt;
Flask-DebugToolbar&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.10.1

&lt;span class=&quot;c&quot;&gt;# Test&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;coveralls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.1
&lt;span class=&quot;nv&quot;&gt;pytest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;3.2.1
pytest-cov&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;2.5.1

&lt;span class=&quot;c&quot;&gt;# Documentation&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Sphinx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.6.3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Installing requirements is easy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Calling main requirements is enough to get application up and running, however for development other packages may be needed (i.e. debug toolbar). In development environment it is better to call:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install -r requirements/dev.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;configuration-management&quot;&gt;Configuration management&lt;/h3&gt;

&lt;p&gt;Configurations are kept in &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt; in main app folder. It will store different collections of application settings. Basic config class sets just some values common for all dev and production environments. Environment specific settings are set in children classes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app/settings.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SECRET_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urandom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;APP_DIR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# This directory&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PROJECT_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APP_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pardir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BCRYPT_LOG_ROUNDS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ASSETS_DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEBUG_TB_ENABLED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Disable Debug toolbar&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEBUG_TB_INTERCEPT_REDIRECTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CACHE_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'simple'&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Can be &quot;memcached&quot;, &quot;redis&quot;, etc.&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Production configuration.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'prod'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SQLALCHEMY_DATABASE_URI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'postgresql://localhost/example'&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# TODO: Change me&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEBUG_TB_ENABLED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Disable Debug toolbar&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DevConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Development configuration.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dev'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DB_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dev.db'&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Put the db file in project root&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DB_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PROJECT_ROOT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SQLALCHEMY_DATABASE_URI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sqlite:///{0}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DB_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEBUG_TB_ENABLED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ASSETS_DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Don't bundle/minify static assets&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CACHE_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'simple'&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Can be &quot;memcached&quot;, &quot;redis&quot;, etc.&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TESTING&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SQLALCHEMY_DATABASE_URI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sqlite://'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BCRYPT_LOG_ROUNDS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# For faster tests&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WTF_CSRF_ENABLED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Allows form testing&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can always add other values like API keys later.&lt;/p&gt;

&lt;p&gt;For now I will input configuration manually, but having configuration classes we can tell flask app to manage it dynamically. For example, to set environmental variable &lt;code class=&quot;highlighter-rouge&quot;&gt;APP_SETTINGS&lt;/code&gt; which value will be dependent on the environment our app is running. On Heroku server it will be &lt;code class=&quot;highlighter-rouge&quot;&gt;ProdConfig&lt;/code&gt; on development environment it will be &lt;code class=&quot;highlighter-rouge&quot;&gt;DevConfig&lt;/code&gt; and so on. To set environmental variable in Linux type: &lt;code class=&quot;highlighter-rouge&quot;&gt;export APP_SETTINGS=&amp;lt;NameOfClass&amp;gt;&lt;/code&gt; (i.e. export APP_SETTINGS=DevConfig). To make it permanent we should place export statement in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt; file. On Windows instead of export we will use &lt;code class=&quot;highlighter-rouge&quot;&gt;set APP_SETTINGS=&amp;lt;NameOfClass&amp;gt;&lt;/code&gt;. If we are going to employ environmental variable governing type of configuration, our &lt;code class=&quot;highlighter-rouge&quot;&gt;app.py&lt;/code&gt; should change.&lt;/p&gt;

&lt;h3 id=&quot;flask-app-factory&quot;&gt;Flask app factory&lt;/h3&gt;

&lt;p&gt;We will use app factory pattern and &lt;code class=&quot;highlighter-rouge&quot;&gt;Flask-Script&lt;/code&gt; extension to build our app foundations. The &lt;code class=&quot;highlighter-rouge&quot;&gt;md_analytics/app.py&lt;/code&gt; contains Flask factory, which is just a simple function wrapped around Flask object creation. File &lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py&lt;/code&gt; from root directory contains application manager with all command-line directives.  This way we can create multiple instances of the app, using different parameters (i.e. app settings). It is time to expand our toy “Hello Flask!” example to employ this pattern.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app/app.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app.settings&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProdConfig&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;h1&amp;gt;Welcome to Social media analytic tool&amp;lt;/h1&amp;gt;'&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This application still doesn’t do much, except displaying ‘Welcome to Social media analytic tool’ from index view. It takes production configuration as default, however here we specify to use development environment instead. In next part we will swap &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; header to landing page and dashboard blueprints. For now simple text is enough to test page routing logic, settings management and deployment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;manage.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask_script&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Manager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Shell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask_script.commands&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShowUrls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Clean&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app.app&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_app&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app.settings&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DevConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProdConfig&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Manager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;runserver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;show-urls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShowUrls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;File &lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py&lt;/code&gt; uses Flask-Script to register command-line tasks outside web application (from bash level). There are several build in commands like &lt;code class=&quot;highlighter-rouge&quot;&gt;Server()&lt;/code&gt;, which runs the Flask development server. Still &lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py&lt;/code&gt; is not the only way to run our app locally. We can use HerokuCLI to do that (see &lt;a href=&quot;#heroku-deployment&quot;&gt;Heroku deployment&lt;/a&gt;). Two additional methods are &lt;code class=&quot;highlighter-rouge&quot;&gt;show-urls&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;clean&lt;/code&gt;. First will show all endpoints for our app, the second will clean all app folders from &lt;code class=&quot;highlighter-rouge&quot;&gt;__pycache__&lt;/code&gt; folders.&lt;/p&gt;

&lt;h3 id=&quot;test-flask-app&quot;&gt;Test Flask app&lt;/h3&gt;

&lt;p&gt;It is time to write some unit tests. This should also clear situation with continuous integration service, which requires test to run smoothly to finish all green. Lets update &lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py&lt;/code&gt; to run some tests from command-line. First locate test folder in relation to &lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py&lt;/code&gt; and write simple function running tests using excellent Python library &lt;code class=&quot;highlighter-rouge&quot;&gt;pytest&lt;/code&gt;. Add following snippet to &lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;manage.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;HERE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TEST_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HERE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'tests'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@manager.command&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Run the tests.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pytest&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exit_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pytest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TEST_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'--verbose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exit_code&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This allows to call &lt;code class=&quot;highlighter-rouge&quot;&gt;python manage.py test&lt;/code&gt; from the app root directory. Result depends on battery of tests we currently have. Pytest convention places unit-tests in &lt;code class=&quot;highlighter-rouge&quot;&gt;tests&lt;/code&gt; directory, which resembles structure of the tested application. Also files should have “test” phrase in the name so that pytest can collect them without any problems. For now we will write three simple tests for our configurations:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tests/app/test_settings.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Test configs.&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app.app&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_app&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app.settings&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DevConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestConfig&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_production_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Production config.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'prod'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEBUG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEBUG_TB_ENABLED'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_dev_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Development config.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dev'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEBUG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_testing_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Basic config&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we can call test suit via app manager and see results:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python manage.py &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;=============================&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;session starts &lt;span class=&quot;o&quot;&gt;=============================&lt;/span&gt;
platform linux -- Python 3.6.1, pytest-3.2.1, py-1.4.33, pluggy-0.4.0 -- /home/mdyzma/.envs/md_analytics/bin/python
cachedir: .cache
rootdir: /home/mdyzma/Documents/GitHub/md_analytics, inifile:
plugins: cov-2.5.1
collected 3 items

tests/app/test_settings.py::test_production_config PASSED
tests/app/test_settings.py::test_dev_config PASSED
tests/app/test_settings.py::test_testing_config PASSED

&lt;span class=&quot;o&quot;&gt;==========================&lt;/span&gt; 3 passed &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.08 seconds &lt;span class=&quot;o&quot;&gt;===========================&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can alway launch tests manually:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m pytest&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Additionally we can add &lt;code class=&quot;highlighter-rouge&quot;&gt;--cov=app tests/&lt;/code&gt; flag, which indicate source code location and tests location for test coverage package. Flag instructs pytest to create test coverage report, which can be further used by third party software (i.e. Jenkins or special services like &lt;a href=&quot;https://coveralls.io&quot;&gt;coveralls.io&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Having all command line features integrated into one common interface is alway a good thing and helps other developers to understand code and join the project faster. However at this point our application will be tested on TravisCI server using command from &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; (see &lt;a href=&quot;#continuous-integration&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;heroku-deployment&quot;&gt;Heroku deployment&lt;/h2&gt;

&lt;p&gt;For deployment we will use Heroku service. It is good practice to stage changes first and check consistency and after acceptance tests pass, to promote staged application to the production. Production is “live” application accessible for users. To achieve that we have to create two separate applications. Heroku implemented “quick deploy” button, which is specified in root directory. File &lt;code class=&quot;highlighter-rouge&quot;&gt;app.json&lt;/code&gt; contains all information necessary to copy files and deploy application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app.json&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MD Analytics&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Python-Flask app, which displays social media accounts data analysis.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku/python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;repository&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/mdyzma/md_analytics.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;env&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;APP_SETTINGS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Application configuration setting.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ProdConfig&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;social-media&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Another file, we will need is &lt;code class=&quot;highlighter-rouge&quot;&gt;Procfile&lt;/code&gt;. It instructs Heroku platform how to run our app. Because Heroku allows to deploy php, js, java, ruby and python applications, we have to be specific what software should be used by platform. We have to be specific also about the location of our running function. We do not need development server on Heroku, therefore we will point it to the place, where WSGI will pick up code execution.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Procfile - uses gunicorn to launch python app&lt;/span&gt;

web: gunicorn app.app:create_app&lt;span class=&quot;se&quot;&gt;\(\)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# launching app:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# $ heroku local&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… and because gunicorn works only on “nix” systems, we need simple app call for windows (in case we want to develop on Windows machine):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Procfile.windows&lt;/span&gt;

web: python manage.py runserver

&lt;span class=&quot;c&quot;&gt;# launching app:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# $ heroku local -f Procfile.windows&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Both should produce following output:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku &lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;WARN] No ENV file found
13:31:25 web.1   |  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-06 13:31:25 +0200] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3400] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Starting gunicorn 19.7.1
13:31:25 web.1   |  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-06 13:31:25 +0200] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3400] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Listening at: http://0.0.0.0:5000 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3400&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
13:31:25 web.1   |  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-06 13:31:25 +0200] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3400] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Using worker: sync
13:31:25 web.1   |  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-06 13:31:25 +0200] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3403] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Booting worker with pid: 3403&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;App creation can be done via Heroku web interface or command line tool, but first we need to make sure &lt;a href=&quot;https://toolbelt.heroku.com&quot;&gt;HerokuCLI&lt;/a&gt; is installed. Type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku --version

heroku-cli/6.12.9-d4bf599 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;linux-x64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; node-v8.1.4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Piece of advice for Fedora users: from my experience it is better to install Heroku official, standalone version, instead of Heroku Ruby gem. It causes less problems.&lt;/p&gt;

&lt;p&gt;After successful HerokuCLI installation we can proceed and use it to create two separate applications. I called mine: &lt;code class=&quot;highlighter-rouge&quot;&gt;md-analytics-stage&lt;/code&gt; for staging environment, where app undergoes “acceptance tests” and &lt;code class=&quot;highlighter-rouge&quot;&gt;md-analytics&lt;/code&gt; for production environment (app released for users). We will do it in three steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create &lt;strong&gt;md-analytics&lt;/strong&gt; and &lt;strong&gt;md-analytics-stage&lt;/strong&gt; apps&lt;/li&gt;
  &lt;li&gt;Create &lt;strong&gt;md-analytics&lt;/strong&gt; pipeline (group of applications sharing same codebase) and add apps to it&lt;/li&gt;
  &lt;li&gt;push files manually to Heroku (later CI system will deploy app to the staging environment upon success. Then after inspecting it app can be manually promoted to &lt;code class=&quot;highlighter-rouge&quot;&gt;md-analytics&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I assume we have an application running on local machine. Lets create applications on Heroku service and bind them with a pipeline. First login to Heroku service:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku login
Enter your Heroku credentials:
Email: mdyzma@gmail.com
Password: &lt;span class=&quot;k&quot;&gt;************&lt;/span&gt;
Two-factor code: &lt;span class=&quot;k&quot;&gt;******&lt;/span&gt;
Logged &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;as mdyzma@gmail.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pull GitHub repository. Later on files will be pushed to the created Heroku application manually (once we configure Travis, it will be done automatically):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/mdyzma/md_analytics.git
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;md_analytics
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create apps:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# production &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku create --region eu --buildpack heroku/python md-analytics
Creating md-analytics... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;, region is eu
https://md-analytics.herokuapp.com/ | https://git.heroku.com/md-analytics.git

&lt;span class=&quot;c&quot;&gt;# ...and stage&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku create --region eu --buildpack heroku/python md-analytics-stage
Creating md-analytics-stage... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;, region is eu
https://md-analytics-stage.herokuapp.com/ | https://git.heroku.com/md-analytics-stage.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Order in which apps were created is relevant, because HerokuCLI will add extra remote address to our app’s git. Address will point to the app repository on Heroku, which was created last and we want it to be stage (remember that production promotion is done manually).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote -v
heroku  https://git.heroku.com/md-analytics-stage.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;fetch&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
heroku  https://git.heroku.com/md-analytics-stage.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;push&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
origin  git@github.com:mdyzma/md_analytics.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;fetch&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
origin  git@github.com:mdyzma/md_analytics.git &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;push&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As we can see in addition to the original GitHub &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt; repo, we have link to the &lt;code class=&quot;highlighter-rouge&quot;&gt;heroku&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can also check present apps:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku apps
&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; mdyzma@gmail.com Apps
md-analytics &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
md-analytics-stage &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When we open our apps in the browser: &lt;a href=&quot;http://md-analytics-stage.herokuapp.com&quot;&gt;http://md-analytics-stage.herokuapp.com&lt;/a&gt;,m we would see empty apps created by Heroku service. All we have is default Heroku message, that our WSGI python app was launched successfully:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/heroku-empty-app.png&quot; alt=&quot;heroku_empty_app&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we have to set environmental variables and upload application files to the remote location:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku config:set --app md-analytics-stage &lt;span class=&quot;nv&quot;&gt;APP_SETTINGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ProdConfig
Setting APP_SETTINGS... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;APP_SETTINGS: ProdConfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To upload files directly from local master branch to remote heroku repo type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push heroku master

git push heroku master
Counting objects: 50, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Delta compression using up to 8 threads.
Compressing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;45/45&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Writing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;50/50&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 12.04 KiB | 0 bytes/s, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Total 50 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, reused 4 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
remote: Compressing &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;files... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
remote: Building &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;:
remote:
remote: -----&amp;gt; Python app detected
remote: -----&amp;gt; Installing python-3.6.2
remote: -----&amp;gt; Installing pip
remote: -----&amp;gt; Installing requirements with pip
...
remote: -----&amp;gt; Discovering process types
remote:        Procfile declares types -&amp;gt; web
remote:
remote: -----&amp;gt; Compressing...
remote:        Done: 49.3M
remote: -----&amp;gt; Launching...
remote:        Released v3
remote:        https://md-analytics-stage.herokuapp.com/ deployed to Heroku
remote:
remote: Verifying deploy... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
To https://git.heroku.com/md-analytics-stage.git
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;new branch]      master -&amp;gt; master&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And voila! App is running in our stage environment:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/heroku-first-deployment.png&quot; alt=&quot;heroku-first-stage-deployment&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After creating apps we can bind hem together in single pipeline. To do it from HeokuCLI we need additional plug-in. Lets install it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku plugins:install heroku-pipelines
Installing plugin heroku-pipelines... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now lets create new pipeline and point specific apps to their environments (HerokuCLI provides nice text interface):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku pipelines:create -a md-analytics-stage
? Pipeline name md-analytics
? Stage of md-analytics-stage staging
Creating md-analytics pipeline... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;Adding md-analytics-stage to md-analytics pipeline as staging... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And add production app, choosing production stage this time:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku pipelines:add -a md-analytics md-analytics
? Stage of md-analytics production
Adding md-analytics to md-analytics pipeline as production... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Because app was launched without errors, I will promote staging environment to production.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/heroku-connect-github.png&quot; alt=&quot;heroku-connect-gh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can also connect Giuthub repository to activate automatic deployment options (with “wait for CI” and “automatic deployment” ticked). If we check Heroku dashboard now we should see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/heroku-pipeline.png&quot; alt=&quot;heroku-pipeline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately promoting app does not copy environment’s variables, therefore we have to set app specific variables for production as well:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;md_analytics&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox md_analytics]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku config:set --app md-analytics &lt;span class=&quot;nv&quot;&gt;APP_SETTINGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ProdConfig
Setting APP_SETTINGS and restarting md-analytics... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;, v4
APP_SETTINGS: ProdConfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now both - staging and production environments run Flask app flawlessly.&lt;/p&gt;

&lt;h2 id=&quot;continuous-integration&quot;&gt;Continuous integration&lt;/h2&gt;

&lt;p&gt;We will use TravisCI, but it is also possible to build automatic system with GitLab, Jenkins or BuildBot. There are (or will be) separate articles on this blog describing specific CI/CD options.&lt;/p&gt;

&lt;p&gt;To set TravisCI we have to place &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file in the application root directory. It will contain instructions for TravisCI service what language we use (Python), which versions (2.7, 3.6 and nightly build), how to test application, how to create basic metrics (like test coverage, which will be further processed by &lt;a href=&quot;https://coveralls.io&quot;&gt;Coveralls.io&lt;/a&gt; service) and finally how to deploy it to the Heroku upon successfully finishing all steps (for detail description of Heroku deployment, see &lt;a href=&quot;#heroku&quot;&gt;here&lt;/a&gt;). “.travis.yml” file will look similar to this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.travis.yml&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.7&quot;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.5&quot;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.6&quot;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;nightly&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# command to install dependencies&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pip&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-r&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;requirements/dev.txt&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# command to run tests&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python -m pytest --cov=app tests/&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;after_success&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install coveralls&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;coverage run --source=flask_oauthlib setup.py -q nosetests&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;coveralls&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;heroku&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;secure&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hqJqe/oeO5nQuX8WZkuxlu+Vwr/6OJYFCLN3CCSmaJ1LTaaxlqu89b/chj0evLadykgQMHLmsehW6v6WZlR44ZNxqsMRBk3ypn380jTH+4DNBtPQLEV5UySUGGRlKDBg6UHjNUmhb44vypE0+NpdjbEyYfwxjNXJhT3oogVMlOEiUsOfx/Tor9QA54bu92HhKQTvMHmCxzh4vq2e/e/YiB+x1pPFGqVE3G+KlGTBtjF8rRA7alrjfXUqVLS897tKjwJHtGQt84XNEcXPijlhZSk+M22LZbGo061oP6emhJBDvKqHcIcwa5pR4i9zVbv3XrLPU3icD7qvkSwvdtxnd6Goz4Ybomy4dB/iat46fWnPS0WUmlDHRFo4iKXQMnFLJ79ET/0/gfRrVi54sM/Dru4opFoh4zjld3lwjSAyoAJFlO61hakjtxAM8L3NVMeuiZvXkKjgFIgfCiLlDpK5xyDUhzLqwcOO5UazHwo/pXD32bJgzPbDHaoF1m1QMEhe4HnzHhQJveqaHHPzIXuImBwEJhrCgZjGLDxGx+D93KNY/dDDFItOOQ3493V2CUKjer35c9NOk6cr2kloDVIg4Qfe9Pzg3w9C5n0dakQuaVpHSEnG+oz6PjIIeIItgnYXzJBF5wvU0dWXUcZWmYiQuhjKwFnAfODDMAfPGXC/Yh8=&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;md-analytics-stage&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;YML files are designed to be simple to read by humans. Options are defined using &lt;code class=&quot;highlighter-rouge&quot;&gt;key: value&lt;/code&gt; pairs with nested structure. I suppose, the only mysterious part is &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy -&amp;gt; api_key&lt;/code&gt;. Lets examine this entry. Once registered to Heroku, I was given API key (Heroku -&amp;gt; account settings). It is unwise to paste your key just like that to the &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt;. Therefore we will use Travis ruby gem to encrypt it (must have Ruby installed):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md_analytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mdyzma&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@devbox&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md_analytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;travis&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;installed&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md_analytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mdyzma&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@devbox&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md_analytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;travis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heroku&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api_key&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This appended &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file with encrypted API token read by HerokuCLI. The only thing left to be done is to connect &lt;code class=&quot;highlighter-rouge&quot;&gt;md_analytics&lt;/code&gt; GitHub with TravisCI service:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/connect-github-travis-ci.png&quot; alt=&quot;connect-github-to-travis-ci&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now when we upload new commit Travis will sense changes and run all tasks described in YML automatically. In this case it should perform tests on three python instances (2.7, 3.6 and 3.7-DEV). In all Python environments it should install requirements and run tests (including test coverage report). Upon success it should deploy our app to the staging environment on Heroku service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/travis-ci-project.png&quot; alt=&quot;travis-dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And it failed… We can inspect build console log and track reason. Looks like tests run great, but there is a problem with Heroku deployment. Some error in API key encryption. We used travis ruby gem to extract authorization token and encrypt it with: &lt;code class=&quot;highlighter-rouge&quot;&gt;travis encrypt&lt;/code&gt;. Obviously it did not go well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/travis-ci-fail-report.png&quot; alt=&quot;travis-error-log-console&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All right. For some reason &lt;code class=&quot;highlighter-rouge&quot;&gt;$(heroku auth:token)&lt;/code&gt; returned strange data (need to read more about Heroku authentication mechanism). I have some “initialization” scripts connected to the console and they might have interfered with travisCLI. I had to work around it and provide HEROKU API TOKEN directly:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;travis encrypt &lt;span class=&quot;s2&quot;&gt;&quot;[SECRET]&quot;&lt;/span&gt; --add deploy.api_key&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… which fixed deployment problem. According to &lt;a href=&quot;https://github.com/yunojuno/heroku-tools/issues/7&quot;&gt;this GitHub issue&lt;/a&gt; another approach could be creating environmental variable &lt;code class=&quot;highlighter-rouge&quot;&gt;HEROKU_API_TOKEN&lt;/code&gt; on Travis an paste secret token there.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-07-07/travis-ci-green.png&quot; alt=&quot;travis-ci-fixed&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;What we have is a Flask application with complete continuous integration and continuous deployment work-flow up and running. Basic elements of the system are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Code repository placed on &lt;a href=&quot;https://github.com/mdyzma/md_analytics&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;TravisCI continuous integration running pytest and passing app further&lt;/li&gt;
  &lt;li&gt;Two deployment environments on Heroku: &lt;a href=&quot;http://md-analytics-stage.herokuapp.com&quot;&gt;stage&lt;/a&gt; and &lt;a href=&quot;https://md-analytics.herokuapp.com&quot;&gt;production&lt;/a&gt; grouped in one pipeline&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
To continue:&lt;/p&gt;
&lt;h3 id=&quot;social-media-analysis-with-flask-part-ii&quot;&gt;&lt;a href=&quot;http://localhost:4000/2017/07/12/social-media-analysis-part-ii/&quot;&gt;Social media analysis with Flask, Part II&lt;/a&gt;&lt;/h3&gt;

&lt;!-- Images --&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Michal Dyzma</name>
          
          
        </author>
      

      
        <category term="python" />
      
        <category term="social-media" />
      
        <category term="Flask" />
      
        <category term="TravisCI" />
      
        <category term="Heroku" />
      

      

      
        <summary type="html">Flask application presenting social media accounts analysis in form of dashboard. It transforms various data sources into clear and concise report. This part describes backbone of the application, which is basic Flask configuration, Travis Continuous Integration (with tests) and Heroku Continuous Deployment to multiple environments with a single button. It is under version control, tested and CI/CD ready.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Deploy Flask application with TravisCI</title>
      
      <link href="http://localhost:4000/2017/05/20/flask-and-travis-ci/" rel="alternate" type="text/html" title="Deploy Flask application with TravisCI" />
      <published>2017-05-20T18:40:53+02:00</published>
      <updated>2017-05-20T18:40:53+02:00</updated>
      <id>http://localhost:4000/2017/05/20/flask-and-travis-ci</id>
      <content type="html" xml:base="http://localhost:4000/2017/05/20/flask-and-travis-ci/">&lt;p&gt;TravisCI is a very nice service, which allows to easily build your own  CI/CD platform using GitHub project and configuration file in YAML (YAML Ain’t Markup Language) format. Easy to read by ordinary people not speaking binary. CI/CD stands for Continuous Integration and Continuous Deployment (or Delivery). Basic concepts in modern software engineering, which are fancy terms for automating entire software production  pipeline: from unit test, acceptance tests to deployment on the production server.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
Source code from the article can be downloaded from this &lt;a href=&quot;https://github.com/mdyzma/travis_python_test&quot;&gt;GitHub repository&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;`&lt;/p&gt;

&lt;h2 id=&quot;travisci--github-integration&quot;&gt;TravisCI &amp;amp; GitHub integration&lt;/h2&gt;

&lt;p&gt;First thing first, register account on &lt;a href=&quot;https://travis-ci.org&quot;&gt;https://travis-ci.org&lt;/a&gt;. The easiest way is to integrate TravisCI with your GitHub account. Go to the GitHub and initialize empty repository. Next go to the Travis profile page and sync repository. Your new project should appear on the list. Find it and enable webhook listening git repository changes on GitHub:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-20/webhook.png&quot; alt=&quot;webhook&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now if you check GitHub’s &lt;strong&gt;settings tab -&amp;gt; Integration &amp;amp; services&lt;/strong&gt;, you will find Travis on the list of connected services:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-20/gh-settings.png&quot; alt=&quot;settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Project s listed on your main Travis Profile, but says &lt;em&gt;“There is no build on the default branch yet.”&lt;/em&gt;. We need &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; in our project&lt;/p&gt;

&lt;h2 id=&quot;travis-yaml-configuration-file&quot;&gt;Travis YAML configuration file&lt;/h2&gt;

&lt;p&gt;To set TravisCI we have to place &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file in the application root directory. It will contain instructions for TravisCI service. Project structure should be similar to this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox GitHub]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree .
.
|-- flask_and_travis_ci/
    |-- .gitignore
    |-- .travis.yml
    |-- LICENSE
    &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- README.md&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;YAML is pretty easy to read and write. The most important parts of our CI system will be:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;language versions&lt;/strong&gt; used to test app&lt;/li&gt;
  &lt;li&gt;app &lt;strong&gt;dependencies installation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;running &lt;strong&gt;code metrics&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;test coverage&lt;/li&gt;
      &lt;li&gt;pep8 standard consistency check (style guide)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;running &lt;strong&gt;unit tests&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;running &lt;strong&gt;acceptance test&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;build latest documentation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;deployment to staging&lt;/strong&gt; environment&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First lets set language (Python obviously) and version of the interpreter:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.travis.yml&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.7&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3.5&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3.6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;Depending on your program this will cover 99.5% of all Python users. The 0.5% would cover exotic bio-it labs from the last century and European Space Agency data processing clusters.  Rest already uses Python v3.6 at least. But let’s add 2.7 version just for sport. Now let’s install all the dependencies needed in our project.&lt;/p&gt;

&lt;p&gt;It is best to keep dependencies organized in separate files. One for each environment. Main &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; file contains link to the production environment dependencies (used by deployment service). For development purposes I will use superset of requirements from &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements/dev.txt&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree .
.
|
|-- requirements/
|   |-- dev.txt
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- prod.txt
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we will link &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements/prod.txt&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements/dev.txt&lt;/code&gt;, so that installing development dependencies will also install all required in production (which means when application is accessible for users). For simple web application requirements may look like this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;requirements.txt&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# requirements.txt&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Included because many Paas's require a requirements.txt file in the project root&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Just installs the production requirements.&lt;/span&gt;
-r requirements/prod.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;requirements/prod.txt&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# requirements/prod.txt&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Everything needed in production&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Flask&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.12.2

&lt;span class=&quot;c&quot;&gt;# Deployment&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;gunicorn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;19.7.1

&lt;span class=&quot;c&quot;&gt;# Test&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;behave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.2.5
&lt;span class=&quot;nv&quot;&gt;WebTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;2.0.29
&lt;span class=&quot;c&quot;&gt;#only in python 2.7&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;2.0.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We will add more dependencies while app grows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;requirements/dev.txt&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# requirements/dev.txt&lt;/span&gt;

-r prod.txt

&lt;span class=&quot;c&quot;&gt;# Debug&lt;/span&gt;
Flask-DebugToolbar&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.10.1

&lt;span class=&quot;c&quot;&gt;# PEP8&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;pylint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.8.1

&lt;span class=&quot;c&quot;&gt;# Coverage&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;coverage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;4.4.2

&lt;span class=&quot;c&quot;&gt;# Documentation&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Sphinx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.6.5
sphinx-autobuild&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.7.1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Installing requirements is easy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox GitHub]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Calling main requirements is enough to get application up and running, however for development other packages may be needed (i.e. debug toolbar). In development environment we should call:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox GitHub]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install -r requirements/dev.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… and it is exactly what we are going to call in &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.travis.yml&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.7&quot;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.5&quot;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.6&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# install dependencies&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
  &lt;span class=&quot;s&quot;&gt;-pip install -r requirements/dev.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now when all dependencies were installed successful pipeline should proceed to create code metrics, particularly test coverage and code consistency with PEP8.&lt;/p&gt;

&lt;h2 id=&quot;test-coverage&quot;&gt;Test coverage&lt;/h2&gt;

&lt;p&gt;Code coverage can be tested using &lt;code class=&quot;highlighter-rouge&quot;&gt;coverage&lt;/code&gt; package. It is tricky to use, therefore some explanation might be useful. I am going to use traditional coverage tool to produce coverage report in html, which will be grabbed by codecov service (check: &lt;a href=&quot;https://codecov.io&quot;&gt;codecov.io&lt;/a&gt;), which is integrated with GitHub. You can enable codecov for all repositories in your GitHub account.&lt;/p&gt;

&lt;p&gt;To get simple report is is enough to type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$coverage&lt;/span&gt; report -m webapp.py 

Name        Stmts   Miss  Cover   Missing
-----------------------------------------
webapp.py       7      1    86%   32&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But we want nice report. First we have to run our app using coverage, to allow it to gather execution data. However, we do not want to run our app (partially we do, but there is no test server prepared, so we will stick to the minimum plan, because it would launch dev server and stay like this). Instead we will run &lt;code class=&quot;highlighter-rouge&quot;&gt;test_webapp.py&lt;/code&gt;, gather data, and create html report.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;coverage run test_webapp.py &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; coverage html&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This should produce &lt;code class=&quot;highlighter-rouge&quot;&gt;htmlcov&lt;/code&gt; directory in our app folder. The same will happen within Docker environment spined by TravisCI. We will install additional package codecov and run coverage. Upon success codecov will grab html or xml output and transform into concise and nice report, accessible on their site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.travis.yml&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# install dependencies&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install codecov&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# run scripts&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;coverage erase&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;coverage run test_webapp.py &amp;amp;&amp;amp; coverage html&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;after_success&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;codecov&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;pep8-consistency&quot;&gt;PEP8 consistency&lt;/h2&gt;

&lt;p&gt;This is usually resolved on the level of IDE. Most modern Python IDE’s have style guide built in the code editor. Therefore, this step is usually skipped in many projects.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A Foolish Consistency is the Hobgoblin of Little Minds&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is true what Rober Martin wrote: Codes are read much longer time than being written. This style guide exists for consistency. The most important thing is to know when you should break consistency, to keep software maintenance efficient. For example this PEP you should not break backward compatibility.  One of the modules allowing to test code style is &lt;code class=&quot;highlighter-rouge&quot;&gt;pylint&lt;/code&gt;. Text report of pylint module may look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pylint webapp.py
No config file found, using default configuration
&lt;span class=&quot;k&quot;&gt;*************&lt;/span&gt; Module webapp
I: 25, 0: Locally disabling C0103 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;locally-disabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
C: 24, 0: Line too long &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;119/80&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;line-too-long&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;


Report
&lt;span class=&quot;o&quot;&gt;======&lt;/span&gt;
8 statements analysed.

Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+&lt;span class=&quot;o&quot;&gt;==========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+
|code      |24     |66.67 |24       |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+----------+-------+------+---------+-----------+
|docstring |5      |13.89 |5        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+----------+-------+------+---------+-----------+
|comment   |1      |2.78  |1        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+----------+-------+------+---------+-----------+
|empty     |6      |16.67 |6        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+----------+-------+------+---------+-----------+



External dependencies
---------------------
::

    flask 
      &lt;span class=&quot;se&quot;&gt;\-&lt;/span&gt;Flask &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;webapp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;



Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+
|convention |1      |1        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-----------+-------+---------+-----------+
|refactor   |0      |0        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-----------+-------+---------+-----------+
|warning    |0      |0        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-----------+-------+---------+-----------+
|error      |0      |0        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-----------+-------+---------+-----------+



Messages
--------

+-----------------+------------+
|message id       |occurrences |
+&lt;span class=&quot;o&quot;&gt;=================&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;============&lt;/span&gt;+
|locally-disabled |1           |
+-----------------+------------+
|line-too-long    |1           |
+-----------------+------------+



Global evaluation
-----------------
Your code has been rated at 8.75/10 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;previous run: 8.75/10, +0.00&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Statistics by &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;============&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+
|module   |1      |1          |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|class    |0      |0          |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |0           |0        |
+---------+-------+-----------+-----------+------------+---------+
|method   |0      |0          |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |0           |0        |
+---------+-------+-----------+-----------+------------+---------+
|function |1      |1          |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+



Duplication
-----------

+-------------------------+------+---------+-----------+
|                         |now   |previous |difference |
+&lt;span class=&quot;o&quot;&gt;=========================&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+
|nb duplicated lines      |0     |0        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-------------------------+------+---------+-----------+
|percent duplicated lines |0.000 |0.000    |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-------------------------+------+---------+-----------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When we fix long comment line 24, we will get:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pylint webapp.py
No config file found, using default configuration
&lt;span class=&quot;k&quot;&gt;*************&lt;/span&gt; Module webapp
I: 26, 0: Locally disabling C0103 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;locally-disabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;


Report
&lt;span class=&quot;o&quot;&gt;======&lt;/span&gt;
8 statements analysed.

Statistics by &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;============&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+
|module   |1      |1          |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|class    |0      |0          |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |0           |0        |
+---------+-------+-----------+-----------+------------+---------+
|method   |0      |0          |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |0           |0        |
+---------+-------+-----------+-----------+------------+---------+
|function |1      |1          |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+



Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+&lt;span class=&quot;o&quot;&gt;==========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+
|code      |24     |64.86 |24       |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+----------+-------+------+---------+-----------+
|docstring |5      |13.51 |5        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+----------+-------+------+---------+-----------+
|comment   |2      |5.41  |1        |+1.00      |
+----------+-------+------+---------+-----------+
|empty     |6      |16.22 |6        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+----------+-------+------+---------+-----------+



Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=======&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=========&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt;+
|convention |0      |1        |-1.00      |
+-----------+-------+---------+-----------+
|refactor   |0      |0        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-----------+-------+---------+-----------+
|warning    |0      |0        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-----------+-------+---------+-----------+
|error      |0      |0        |&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;          |
+-----------+-------+---------+-----------+

Global evaluation
-----------------
Your code has been rated at 10.00/10 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;previous run: 8.75/10, +1.25&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And this is exactly what goes to the CI/CD system:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.travis.yml&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# check style&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pylint --output-format=text webapp.py&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sometimes it is necessary to tweak pylint (especially in case of flask or python apps), to stop failing standard naming convention i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;app = Flask(__name__)&lt;/code&gt;. For application name app is just variable holding Flask class object. For pylin it is a global contant (visible in entire module), therefore should follow constants convention naming (capital letters, etc). We can tweak pylint to indicate variables we want to ignore. Or change its general behaviour changing regex, which is used to discover constants (check &lt;a href=&quot;https://pylint.readthedocs.io/en/latest/tutorial.html&quot;&gt;Pylint documentation&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;

&lt;p&gt;Project’s documentation is placed in &lt;code class=&quot;highlighter-rouge&quot;&gt;docs/&lt;/code&gt; folder and is based on excellent Python &lt;code class=&quot;highlighter-rouge&quot;&gt;Sphinx&lt;/code&gt; module. Hearth of the documentation is &lt;code class=&quot;highlighter-rouge&quot;&gt;conf.py&lt;/code&gt; file, where all extensions and static pages generator properties are configured.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree .
.
|
|-- docs/
|   |-- make.bat
|   |-- Makefile
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;/
|       |-- _static/
|       |-- _templates/
|       |-- conf.py
|       &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- index.rst&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Creating basic documentation stub out of the box.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox docs]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sphinx-quickstart
Welcome to the Sphinx 1.6.3 quickstart utility.

Please enter values &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the following settings &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;just press Enter to
accept a default value, &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;one is given &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;brackets&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

...
Creating file ./source/conf.py.
Creating file ./source/index.rst.
Creating file ./Makefile.
Creating file ./make.bat.

Finished: An initial directory structure has been created.

You should now populate your master file ./source/index.rst and create other documentation
&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;files. Use the Makefile to build the docs, like so:
   make builder
where &lt;span class=&quot;s2&quot;&gt;&quot;builder&quot;&lt;/span&gt; is one of the supported builders, e.g. html, latex or link check.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Following quick-start help, lets build basic html documentation:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox docs]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make html

Running Sphinx v1.6.5
loading pickled environment... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;building &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mo]: targets &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;0 po files that are out of date
building &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;html]: targets &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;0 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;files that are out of date
updating environment: 0 added, 0 changed, 0 removed
looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;now-outdated files... none found
no targets are out of date.
build succeeded.

Build finished. The HTML pages are &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;build/html.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;During development, we will need to build document frequently. Autobuild tool will manage this task and will run local server, which will rebuild sphinx documentation, when it detects changes in &lt;code class=&quot;highlighter-rouge&quot;&gt;.rst&lt;/code&gt; files. To start server type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox docs]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sphinx-autobuild &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;build&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tml

+--------- manually triggered build ---------------------------------------------
| Running Sphinx v1.6.5
| loading pickled environment... not yet created
| building &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mo]: targets &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;0 po files that are out of date
| building &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;html]: targets &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;1 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;files that are out of date
| updating environment: 1 added, 0 changed, 0 removed
| reading sources... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;100%] index
|
| looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;now-outdated files... none found
| pickling environment... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
| checking consistency... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
| preparing documents... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
| writing output... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;100%] index
|
| generating indices... genindex
| writing additional pages... search
| copying static files... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
| copying extra files... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
| dumping search index &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;English &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;code: en&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
| dumping object inventory... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
| build succeeded.
+--------------------------------------------------------------------------------

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 171214 23:05:00 server:283] Serving on http://127.0.0.1:8000
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 171214 23:05:00 handlers:60] Start watching changes
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 171214 23:05:00 handlers:62] Start detecting changes&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we should be able to check docs page in the browser under &lt;a href=&quot;http://127.0.0.1:8000&quot;&gt;http://127.0.0.1:8000&lt;/a&gt; address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-20/docs.png&quot; alt=&quot;docs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Additionally, we want to keep the latest documentation or even publish it online. But we do not need Travis do it. GitHub repository can be connected to the &lt;a href=&quot;http://travis-python-test.readthedocs.io/en/latest/&quot;&gt;ReadTheDocs&lt;/a&gt; service, which will deploy our documentation on its servers whenever repo has been changed. No need to update &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt;. The only thing, that needs to be done is to connect ReadTheDocs webhook with GitHub repository.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-20/rtd-connect.png&quot; alt=&quot;rtd-conn&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bdd-development&quot;&gt;BDD development&lt;/h2&gt;

&lt;p&gt;There are two types of tests I would like to put in this project prototype:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;unit tests&lt;/li&gt;
  &lt;li&gt;acceptance tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unit tests are bound to specific module, class or method/function, while acceptance tests are derived from „User Stories”. Unit tests can be programmed using python’s STL module or very popular &lt;code class=&quot;highlighter-rouge&quot;&gt;pytest&lt;/code&gt;. Acceptance tests use more natural language called &lt;code class=&quot;highlighter-rouge&quot;&gt;Gherkin&lt;/code&gt; and python library &lt;code class=&quot;highlighter-rouge&quot;&gt;behave&lt;/code&gt;. Agile development requires at least three steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write simple acceptance test&lt;/li&gt;
  &lt;li&gt;Make acceptance test pass (using TDD in the inner loop)&lt;/li&gt;
  &lt;li&gt;Refactor acceptance test&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Second step in our case is usually series of unit tests for all modules taking part in acceptance test from top module to most nested one (so called “outside-in” approach). Behave enforces specific folder and file structure with some flexibility, but main components need to be set in our app. Typical structure of acceptance tests with behave is shown below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree .
.
|
|-- features/
|   |-- environment.py
|   |-- home.feature
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- steps/
|       &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- home_steps.py
|
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- test_app.py&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;acceptance-tests&quot;&gt;Acceptance tests&lt;/h3&gt;

&lt;p&gt;Another configuration file is located in &lt;code class=&quot;highlighter-rouge&quot;&gt;features&lt;/code&gt; folder and exposes web application context to the test environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/features/environment.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;webtest&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestApp&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;before_scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;after_scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Basic element of acceptance test written in Gherkin. Each scenario is then translated to python code in &lt;code class=&quot;highlighter-rouge&quot;&gt;steps&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;features/home.feature&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gherkin&quot; data-lang=&quot;gherkin&quot;&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Index page display

    &lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Navigation to Home Page
        &lt;span class=&quot;nf&quot;&gt;When&lt;/span&gt; I navigate to Home Page
        &lt;span class=&quot;nf&quot;&gt;Then&lt;/span&gt; Home Page should be displayed&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Execution of each step from &lt;code class=&quot;highlighter-rouge&quot;&gt;features&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;features/steps/home_steps.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;behave&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u'I navigate to Home Page'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;step_impl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u'{text} should be displayed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;step_impl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We have test, which fails. Now it is time to write simple unit test for our flask app.&lt;/p&gt;

&lt;h3 id=&quot;unit-tests&quot;&gt;Unit tests&lt;/h3&gt;

&lt;p&gt;Simple unit tests to check &lt;code class=&quot;highlighter-rouge&quot;&gt;home()&lt;/code&gt; function. We will mock Flask app request, which returns whatever &lt;code class=&quot;highlighter-rouge&quot;&gt;home&lt;/code&gt; function return when &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; view is called. There is a difference between Python 2 and Python 3 in using mock module. In Python 3 mock is already part of STL’s &lt;code class=&quot;highlighter-rouge&quot;&gt;unittest&lt;/code&gt; module, while in Python 2 it is a separate module called &lt;code class=&quot;highlighter-rouge&quot;&gt;mock&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;test_app.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;unittest&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;webapp&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HomeViewTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unittest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webapp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_home_page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;home&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assertIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Home Page'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;unittest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Test fails. Lets add unit tests and acceptance test in &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.travis.aml&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python -m unittest discover&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;behave&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;application&quot;&gt;Application&lt;/h2&gt;

&lt;p&gt;Lets place basic Flask application in &lt;code class=&quot;highlighter-rouge&quot;&gt;webapp.py&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app.py&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot; class=&quot;full-height&quot;&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;title&amp;gt;Home | TravisCI&amp;lt;/title&amp;gt;
        &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
        &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&amp;gt;
        &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&amp;gt;
        &amp;lt;meta name=&quot;description&quot; content=&quot;Social media analytic tool&quot;&amp;gt;
        &amp;lt;meta name=&quot;author&quot; content=&quot;Michal Dyzma&quot;&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Home Page&amp;lt;/h1&amp;gt;

    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTML&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Running tests now shows all is green and good to go.&lt;/p&gt;
&lt;h2 id=&quot;heroku-deployment&quot;&gt;Heroku deployment&lt;/h2&gt;

&lt;p&gt;To deploy project to the web we need nice server and domain. Heroku provides nice hosting for python apps. Free to play with (5 applications), test and check how our application might work in real life.&lt;/p&gt;

&lt;p&gt;In order to do that we need some Heroku infrastructure. In fact, the only necessary element is &lt;code class=&quot;highlighter-rouge&quot;&gt;Procfile&lt;/code&gt;, instructing Heroku machinery what to launch and how.&lt;/p&gt;

&lt;p&gt;Following our app structure we can set following Procfile:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Procfile&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;web: gunicorn webapp:app&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Also deployment may be automated as well. Let’s create Heroku app first.&lt;/p&gt;

&lt;p&gt;Apps can be created via Heroku web interface or command line tool &lt;a href=&quot;https://toolbelt.heroku.com&quot;&gt;HerokuCLI&lt;/a&gt;. When it is installed type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku --version

heroku-cli/6.14.43-73d5876 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;linux-x64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; node-v9.2.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It seems ok. Now lets login and create app:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Enter your Heroku credentials:
Email: mdyzma@gmail.com
Password: &lt;span class=&quot;k&quot;&gt;************&lt;/span&gt;
Two-factor code: &lt;span class=&quot;k&quot;&gt;******&lt;/span&gt;
Logged &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;as mdyzma@gmail.com
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;heroku create --region eu --buildpack heroku/python flask-travis-ci
Creating ⬢ flask-travis-ci... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;, region is eu
Setting buildpack to heroku/python... &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;https://flask-travis-ci.herokuapp.com/ | https://git.heroku.com/flask-travis-ci.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now lets copy heroku api-key and add it to the &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; using ruby travis gem, which will nicely secure it for us.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install travis
...
14 gems installed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox flask_and_travis_ci]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;travis encrypt &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;heroku auth:token&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; --add deploy.api_key
Detected repository as mdyzma/travis_python_test, is this correct? |yes|&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… this will add api key hash to the &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.travis.yml&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Deployment to Heroku&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;heroku&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;secure&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mSo7Q2TGXZou3GwctrEX5MBW1CrcNDeocOsau2QT5aqvVb8LUcgL8NqytDiOhWOBVX8u3cxn0nSME+j/Edz8Zxcw21Ls4kpZJu8VsJkn8oF/rPflBWIrW/6kw3hMucfec82eUxCOub2juXMTMbCTspaiWAAnpvsaptVmNhXIkvic3OXxRKKg50he9dpRbqRtyPlgR8nyXFYKJCRedzSwufpQWJ8t/pMy+epp06A6Z0CjbqOByYFfpxx7Vkbzj/L3+j4degED1SsmMmL3OQJHp00PJAcKYNEgPBXpgvRcppY/pS9YH/UnDT5nulU/1+K/IiBP/8/SRNj8MXdzlSAXqFBevEbCKyJRfWLMZ3tflbhdm3/0OeSN/3ncc2ypuwXHE5K/Td/P5NuPLmD5vH+di53Hxo/RHmltCxAKturPjrM6uS0bB24KctyztLERDudZkIBYAAZBZJ2t7alWeMY+cgPkfzs9fw0w6+ECphesdI2ZovE5pXXKEqX9Z83fgkAlw1d1iPpfOrz28C4QT12gsopYNFzW76lKKAGRtEUH07bu/R8IB4xohgtTf9a57mYcMYDcYCpJtMkNbqIEgYRDSS9nKdnL6pLNoJPGxsLrLarAYWMA1k7j5UaPBMweSuOj7Haowf84eH4tc/W4CRKMBvJw/HTDIxXdJWEaicpfljI=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flask-travis-ci&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All done. Application is alive and served on Heroku:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-20/app-deped.png&quot; alt=&quot;app-deployed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Temporary link to the working application: &lt;a href=&quot;https://flask-travis-ci.herokuapp.com&quot;&gt;https://flask-travis-ci.herokuapp.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;We have created Flask application with automated pipeline spanning most important aspects of agile software development. From source control, to automatic code metrics, testing and deployment.&lt;/p&gt;

&lt;p&gt;Finally projects  &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file should look like this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.travis.yml&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.7&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3.5&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3.6&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements/dev.txt&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install codecov&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python -m unittest discover&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;behave&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;coverage erase&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;coverage run test_webapp.py &amp;amp;&amp;amp; coverage html&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pylint --output-format=text webapp.py&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;after_success&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;codecov&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;heroku&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;secure&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mSo7Q2TGXZou3GwctrEX5MBW1CrcNDeocOsau2QT5aqvVb8LUcgL8NqytDiOhWOBVX8u3cxn0nSME+j/Edz8Zxcw21Ls4kpZJu8VsJkn8oF/rPflBWIrW/6kw3hMucfec82eUxCOub2juXMTMbCTspaiWAAnpvsaptVmNhXIkvic3OXxRKKg50he9dpRbqRtyPlgR8nyXFYKJCRedzSwufpQWJ8t/pMy+epp06A6Z0CjbqOByYFfpxx7Vkbzj/L3+j4degED1SsmMmL3OQJHp00PJAcKYNEgPBXpgvRcppY/pS9YH/UnDT5nulU/1+K/IiBP/8/SRNj8MXdzlSAXqFBevEbCKyJRfWLMZ3tflbhdm3/0OeSN/3ncc2ypuwXHE5K/Td/P5NuPLmD5vH+di53Hxo/RHmltCxAKturPjrM6uS0bB24KctyztLERDudZkIBYAAZBZJ2t7alWeMY+cgPkfzs9fw0w6+ECphesdI2ZovE5pXXKEqX9Z83fgkAlw1d1iPpfOrz28C4QT12gsopYNFzW76lKKAGRtEUH07bu/R8IB4xohgtTf9a57mYcMYDcYCpJtMkNbqIEgYRDSS9nKdnL6pLNoJPGxsLrLarAYWMA1k7j5UaPBMweSuOj7Haowf84eH4tc/W4CRKMBvJw/HTDIxXdJWEaicpfljI=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flask-travis-ci&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
Source code from the article can be downloaded from this &lt;a href=&quot;https://github.com/mdyzma/travis_python_test&quot;&gt;GitHub repository&lt;/a&gt;
&lt;/div&gt;

&lt;!-- Images --&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Michal Dyzma</name>
          
          
        </author>
      

      
        <category term="python" />
      
        <category term="devops" />
      
        <category term="TravisCI" />
      

      

      
        <summary type="html">TravisCI is a very nice service, which allows to easily build your own CI/CD platform using GitHub project and configuration file in YAML (YAML Ain’t Markup Language) format. Easy to read by ordinary people not speaking binary. CI/CD stands for Continuous Integration and Continuous Deployment (or Delivery). Basic concepts in modern software engineering, which are fancy terms for automating entire software production pipeline: from unit test, acceptance tests to deployment on the production server.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Python, R, Scala and Julia in one Notebook</title>
      
      <link href="http://localhost:4000/2017/04/23/python-r-scala-julia-in-one-notebook/" rel="alternate" type="text/html" title="Python, R, Scala and Julia in one Notebook" />
      <published>2017-04-23T14:51:25+02:00</published>
      <updated>2017-04-23T14:51:25+02:00</updated>
      <id>http://localhost:4000/2017/04/23/python-r-scala-julia-in-one-notebook</id>
      <content type="html" xml:base="http://localhost:4000/2017/04/23/python-r-scala-julia-in-one-notebook/">&lt;p&gt;Use R, Julia, Scala or Python? The answer is: &lt;strong&gt;Yes!&lt;/strong&gt; How to create versatile environment, in which different languages are available and able to communicate with each other? Without changing program you work in and where data may be passed between specific structures characteristic for the language? This post will show you how to do it with four most powerful languages used in Data Science: &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;R&lt;/strong&gt;, &lt;strong&gt;Scala&lt;/strong&gt; and &lt;strong&gt;Julia&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;It is hard to choose best language for data analysis, especially if you are beginner and do not want to go into details about strengths and weaknesses of particular solutions. Should I choose R or Python (2 or 3), maybe Julia would be faster?  What should I use to work with large data sets? My answer is: use what you can! Take the best you can from several languages and make it work. This post will show you how.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Use what you can! Take the best you can!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have chosen four most powerful languages used in Data Science and Big Data analysis, which should give you broadest span of accessible technologies and speed up development or data analysis. Current versions of chosen software:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Language&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;Version&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.python.org/downloads/release/python-2713/&quot;&gt;Python 2&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;2.7.13&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.python.org/downloads/release/python-361/&quot;&gt;Python 3&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;3.6.1&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://cloud.r-project.org&quot;&gt;R&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;3.4.0&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://julialang.org/downloads/&quot;&gt;Julia&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;0.7.0&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.scala-lang.org/download/&quot;&gt;Scala&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;2.12.1&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;procedure&quot;&gt;Procedure&lt;/h2&gt;

&lt;p&gt;I will follow this procedure to prepare work environment:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#python_dist&quot;&gt;installing Python interpreter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#r_lang&quot;&gt;installing R language&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#julia_compiler&quot;&gt;installing Julia language compiler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#scala_compiler&quot;&gt;installing Scala or sbt compiler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;installing additional jupyter kernels:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ipykernel&quot;&gt;ipykernel&lt;/a&gt; - multiple Python support&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#irkernel_py&quot;&gt;IRkernel&lt;/a&gt; via conda - R language support&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#irkernel_r&quot;&gt;IRkernel&lt;/a&gt; via R&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ijulia&quot;&gt;IJulia&lt;/a&gt; - Julia REPL in notebook&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#iscala&quot;&gt;IScala&lt;/a&gt; - Scala support&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So my goal is to install Python, Scala, Julia and R on working machine. Additionally to run notebooks in languages other than Python I need to install specific middle-ware called kernels.&lt;/p&gt;

&lt;p&gt;First let’s grab necessary tools - compilers and interpreters for each language (linked in table above). All languages presented here are multi-platform and can be installed on Windows, Linux and Mac OS machines. Since my working system is Fedora 25 I will describe install procedures for this OS. Debian based Linux distributions do not differ much from Red Hat family (except using different package manager and repos). Windows versions have convenient installers and installation process is trivial. If necessary, I will place link to the windows installer in each section.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;python_dist&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;python-interpreter&quot;&gt;Python interpreter&lt;/h2&gt;

&lt;p&gt;In all Linux distributions Python is available “out of the box”. Unfortunately in many cases default Python is still 2.7 branch. It should be mentioned, that 2.7 is very old and it is being slowly depreciated. It is last supported branch from 2.x family and it’s support will drop in 2020 (see: &lt;a href=&quot;https://www.python.org/dev/peps/pep-0373/&quot;&gt;PEP 373&lt;/a&gt;). There will be no official bug fixes after that date. Additionally most of the currently used libraries are ready to run at least 3.5 version. Unless you have some obscure dependency, there is no excuse not to use Python 3. Older version is included here just for to demonstrate how to manage different Python versions in isolated environments.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There is no excuse not to use Python 3 anymore. Grab it! Use it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I assume you have basic knowledge of Python flavors available today and their strengths and weaknesses. In this tutorial I will use &lt;strong&gt;Python 3&lt;/strong&gt; running on &lt;strong&gt;Fedora 25&lt;/strong&gt; workstation.&lt;/p&gt;

&lt;p&gt;Moreover I have chosen specific distribution of Python, prepared by Continuum Analytics called &lt;strong&gt;Anaconda&lt;/strong&gt;. It is the most comprehensive and free bundle of Python software dedicated to &lt;strong&gt;Data Science&lt;/strong&gt;.&lt;/p&gt;

&lt;!-- &lt;div markdown=&quot;span&quot; class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
Python 3 only
&lt;/div&gt;
 --&gt;

&lt;p&gt;I strongly recommended to use &lt;a href=&quot;https://www.continuum.io/DOWNLOADS&quot;&gt;Anaconda distribution&lt;/a&gt;, which will install Python interpreter, the Jupyter Notebook, and several other packages commonly used in data science and this tutorial. If you choose Anaconda 3, your interpreter will be of version 3.6 (current version) or higher (3.7 alpha is already available).&lt;/p&gt;

&lt;p&gt;I will just follow instructions from installation page and simply execute downloaded script:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://repo.continuum.io/archive/Anaconda3-4.3.1-Linux-x86_64.sh
--2017-04-23 19:36:37--  https://repo.continuum.io/archive/Anaconda3-4.3.1-Linux-x86_64.sh
Resolving repo.continuum.io &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;repo.continuum.io&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;... 104.16.18.10, 104.16.19.10, 2400:cb00:2048:1::6810:130a, ...
Connecting to repo.continuum.io &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;repo.continuum.io&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|104.16.18.10|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 497343851 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;474M&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;application/x-sh]
Saving to: &lt;span class=&quot;s1&quot;&gt;'Anaconda3-4.3.1-Linux-x86_64.sh'&lt;/span&gt;

Anaconda3-4.3.1-Linux-x86_64.sh     100%[&lt;span class=&quot;o&quot;&gt;==========================================&lt;/span&gt;&amp;gt;] 474.30M  14.1MB/s &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;34s

2017-04-23 19:37:12 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13.8 MB/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - &lt;span class=&quot;s1&quot;&gt;'Anaconda3-4.3.1-Linux-x86_64.sh'&lt;/span&gt; saved &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;497343851/497343851]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Script contains all binaries and weights nearly  475 MB. After executing, you should see Anaconda installer:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bash Anaconda3-4.3.1-Linux-x86_64.sh

Welcome to Anaconda3 4.3.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;by Continuum Analytics, Inc.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

In order to &lt;span class=&quot;k&quot;&gt;continue &lt;/span&gt;the installation process, please review the license
agreement.
Please, press ENTER to &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Automatic process will guide you through installation. You don’t have to run installer as a root, unless you want it to be installed for all users. In that case you need sudo privilege to install it in some globally accessible location like &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/anaconda3&lt;/code&gt; and append &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt; with the location of the interpreter &lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=/opt/Anaconda3/bin:$PATH&lt;/code&gt;. This will make Python change system-wide. If you run it with normal user privileges it will choose your user’s home directory and place it in &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/&amp;lt;user&amp;gt;/anaconda3&lt;/code&gt;. Installer will install bunch of python packages including MKL optimizations (Math Kernel Library), numpy, pandas, matplotlib, scikit-learn and Jupyter - just to name few. Nearly 200 packages grouped together to make your life easier. To get list of the packages execute this command: &lt;code class=&quot;highlighter-rouge&quot;&gt;conda list | wc -l&lt;/code&gt;. Anyway lets continue with installation…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/home/mdyzma/anaconda3
installing: python-3.6.0-0 ...

Python 3.6.0 :: Continuum Analytics, Inc.
creating default environment...
installation finished.
Do you wish the installer to prepend the Anaconda3 install location
to PATH &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;your /home/mdyzma/.bashrc ? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;yes|no]
&amp;gt;&amp;gt;&amp;gt;yes

Prepending &lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/home/mdyzma/anaconda3/bin to PATH &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/mdyzma/.bashrc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Answering &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt; will make Anaconda’s python your default interpreter. Sometimes installer may be a little bit outdated. Restart terminal, or source &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; and upgrade Python. You can do it with all installed packages using single command: &lt;code class=&quot;highlighter-rouge&quot;&gt;conda update --all&lt;/code&gt;; or just interpreter itself: &lt;code class=&quot;highlighter-rouge&quot;&gt;conda update python&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda update python
Fetching package metadata .........
Solving package specifications: .

Package plan &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;installation &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;environment /home/mdyzma/anaconda3:

The following packages will be UPDATED:

    anaconda: 4.3.1-np111py36_0 --&amp;gt; custom-py36_0
    conda:    4.3.14-py36_0     --&amp;gt; 4.3.17-py36_0
    python:   3.6.0-0           --&amp;gt; 3.6.1-0

Proceed &lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;y]/n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After that you should have brand new Python 3.6.1 as your main system interpreter. To confirm it type &lt;code class=&quot;highlighter-rouge&quot;&gt;conda info&lt;/code&gt; or simply try to run python interpreter in your terminal.&lt;/p&gt;

&lt;p&gt;Conda command should result in displaying detailed information about current Anaconda installation:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda info
    Current conda install:

                   platform : linux-64
              conda version : 4.3.17
           conda is private : False
          conda-env version : 4.3.17
        conda-build version : not installed
             python version : 3.6.1.final.0
           requests version : 2.12.4
           root environment : /home/mdyzma/anaconda3  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;writable&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        default environment : /home/mdyzma/anaconda3
           envs directories : /home/mdyzma/anaconda3/envs
                          /home/mdyzma/.conda/envs
              package cache : /home/mdyzma/anaconda3/pkgs
                          /home/mdyzma/.conda/pkgs
               channel URLs : https://repo.continuum.io/pkgs/free/linux-64
                          https://repo.continuum.io/pkgs/free/noarch
                          https://repo.continuum.io/pkgs/r/linux-64
                          https://repo.continuum.io/pkgs/r/noarch
                          https://repo.continuum.io/pkgs/pro/linux-64
                          https://repo.continuum.io/pkgs/pro/noarch
                config file : None
               offline mode : False
                 user-agent : conda/4.3.17 requests/2.12.4 CPython/3.6.1 Linux/4.9.27-moby Fedora/25 glibc/2.24
                    UID:GID : 0:0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Running python should expose interpreters REPL:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@0devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python
Python 3.6.1 |Anaconda custom &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64-bit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;| &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default, May 11 2017, 13:09:58&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;GCC 4.4.7 20120313 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Red Hat 4.4.7-1&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; on Linux
Type &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;copyright&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;credits&quot;&lt;/span&gt; or &lt;span class=&quot;s2&quot;&gt;&quot;license&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;more information.
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Windows users have to follow simple next,next installer prepared by Continuum. It can be downloaded &lt;a href=&quot;https://www.continuum.io/DOWNLOADS&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;r_lang&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;r-language&quot;&gt;R language&lt;/h2&gt;

&lt;p&gt;Fedora users can install &lt;code class=&quot;highlighter-rouge&quot;&gt;R&lt;/code&gt; from the standard Fedora repository using:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo dnf install R&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The RPM of &lt;code class=&quot;highlighter-rouge&quot;&gt;R&lt;/code&gt; is a meta package, which will install following components:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;R-core         User RPM&lt;/li&gt;
  &lt;li&gt;R-core-devel   Developer RPM containing header files&lt;/li&gt;
  &lt;li&gt;R-java         RPM to ensure that R is configured for use with Java&lt;/li&gt;
  &lt;li&gt;libRmath       Standalone R math library&lt;/li&gt;
  &lt;li&gt;libRmath-devel Header file for the standalone R math library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;According to CRAN manual Fedora will also require developer versions, which contain header files necessary to properly install other R packages and to compile them from the source. Windows users have simple &lt;a href=&quot;https://cloud.r-project.org/bin/windows/base/&quot;&gt;installer&lt;/a&gt; at their disposal.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;julia_compiler&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;julia-compiler&quot;&gt;Julia compiler&lt;/h2&gt;

&lt;p&gt;A &lt;a href=&quot;https://copr.fedorainfracloud.org/coprs/nalimilan/julia/&quot;&gt;Copr repository&lt;/a&gt; is provided for Fedora users. To install Julia just run:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo dnf copr &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nalimilan/julia&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bleeding edge version of Julia is held in separate repository, which can be added with this command: &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dnf copr enable nalimilan/julia-nightlies&lt;/code&gt;. I decided to install nightly Julia release. Adding any of mentioned above results in:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]# dnf copr &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nalimilan/julia-nightlies

You are about to &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;a Copr repository. Please note that this
repository is not part of the main Fedora distribution, and quality
may vary.

The Fedora Project does not exercise any power over the contents of
this repository beyond the rules outlined &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the Copr FAQ at
&amp;lt;https://fedorahosted.org/copr/wiki/UserDocs#WhatIcanbuildinCopr&amp;gt;, and
packages are not held to any quality or security level.

Please &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not file bug reports about these packages &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Fedora
Bugzilla. In &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; of problems, contact the owner of this repository.

Do you want to &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/N]: y
Repository successfully enabled.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After that you can easily install specific build of Julia compiler:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo dnf install julia
Password:

Copr repo &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;julia-nightlies owned by nalimilan                                                                                                              53 kB/s |  67 kB     00:01
Dependencies resolved.
&lt;span class=&quot;o&quot;&gt;=========================&lt;/span&gt;
... List of packages ...

Transaction Summary
&lt;span class=&quot;o&quot;&gt;=========================&lt;/span&gt;
Install  59 Packages

Total download size: 60 M
Installed size: 260 M&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To verify either type &lt;code class=&quot;highlighter-rouge&quot;&gt;julia --version&lt;/code&gt; or simply try to run Julia REPL:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;julia
   _       _ _&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;_     |  A fresh approach to technical computing
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;     | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    |  Documentation: https://docs.julialang.org
   _ _   _| |_  __ _   |  Type &lt;span class=&quot;s2&quot;&gt;&quot;?help&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help.
  | | | | | | |/ _&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; |  |
  | | |_| | | | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_| |  |  Version 0.7.0-DEV.401 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2017-05-30 17:07 UTC&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 _/ |&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;_&lt;span class=&quot;s1&quot;&gt;'_|_|_|\__'&lt;/span&gt;_|  |  Commit e3794ee&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2 days old master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|__/                   |  x86_64-redhat-linux

julia&amp;gt;

&lt;span class=&quot;gp&quot;&gt;julia&amp;gt; &lt;/span&gt;2+2
4

julia&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a name=&quot;scala_compiler&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;scala--sbt&quot;&gt;Scala / sbt&lt;/h2&gt;

&lt;p&gt;Scala compiles to Java byte-code using &lt;strong&gt;Java Virtual Machine&lt;/strong&gt;. Therefore before using it, JRE or JDK must be installed in the system.&lt;/p&gt;

&lt;h4 id=&quot;install-oracle-java-jdkjre&quot;&gt;Install Oracle Java JDK/JRE&lt;/h4&gt;

&lt;p&gt;Download JRE or JDK from Oracle &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html&quot;&gt;www&lt;/a&gt;. Select one of the available options (i.e. download JRE -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;jre-8u131-linux-x64.rpm&lt;/code&gt; or download JDK -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;jdk-8u131-linux-x64.rpm&lt;/code&gt;). What is the difference? JRE stands for &lt;strong&gt;Java Runtime Environment&lt;/strong&gt; , which covers all end-users needs if it comes to run software written in Java. JDK is developers environment (&lt;strong&gt;Java Developers Kit&lt;/strong&gt;) containing JRE with additional tools supporting Java programs development and debugging. Installation must be done with administrator privileges.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su -
Password: 

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@devbox mdyzma]# rpm -Uvh /home/mdyzma/jdk-8u131-linux-x64.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… or:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su -
Password: 

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@devbox mdyzma]# rpm -Uvh /home/mdyzma/jre-8u131-linux-x64.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Please remember to change paths to downloaded files. Windows users should choose &lt;code class=&quot;highlighter-rouge&quot;&gt;msi&lt;/code&gt; installer and follow &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html&quot;&gt;java installer&lt;/a&gt; instructions.&lt;/p&gt;

&lt;p&gt;This step may be skipped for “nix” operating systems, since &lt;code class=&quot;highlighter-rouge&quot;&gt;dnf&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt; will manage dependences for you and install appropriate openJDK environment during Scala installation.&lt;/p&gt;

&lt;h4 id=&quot;install-scala&quot;&gt;Install Scala&lt;/h4&gt;

&lt;p&gt;Installing Scala is straight forward. Windows users have typical &lt;a href=&quot;https://www.scala-lang.org/download/&quot;&gt;installer&lt;/a&gt;. On fedora and other “nix” systems Scala is part of official repository and can be installed with single command:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Scala compiles to Java byte-code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dnf install scala&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When process is finished you can check your installation simply by trying to use Scala REPL:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scala
Welcome to Scala version 2.10.4 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;OpenJDK 64-Bit Server VM, Java 1.8.0_131&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
Type &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;expressions to have them evaluated.
Type :help &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;more information.

&lt;span class=&quot;gp&quot;&gt;scala&amp;gt; &lt;/span&gt;2+2
res0: Int &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It works! Perfect!&lt;/p&gt;

&lt;p&gt;You may notice, that scala from this repo is little bit outdated. Don’t worry. It will be updated when used with sbt build-tool.&lt;/p&gt;

&lt;p&gt;When you write small programs which consist of only one, or just two source files, then it’s easy enough to compile those source files by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;scalac MyProgram.scala&lt;/code&gt; in the terminal. Scalac is name of Scala compiler program. But when project gets bigger, with dozens or maybe even hundreds of source files, then it becomes too tedious to compile all those source files manually. You start to think: &lt;em&gt;“There must be a better way.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;C/C++ programmers use &lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt; tool. For programs compiling to Java byte-code there is &lt;code class=&quot;highlighter-rouge&quot;&gt;sbt&lt;/code&gt;.  It is a general purpose build tool written in Scala. In the next section I will describe its installation.&lt;/p&gt;

&lt;h4 id=&quot;install-sbt&quot;&gt;Install sbt&lt;/h4&gt;

&lt;p&gt;As I mentioned before manual compilation of complex project with hundreds of files is nearly impossible. Not mentioning managing all dependencies required by hundreds of files. Build-tools, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;sbt&lt;/code&gt; (&lt;em&gt;Simple Build Tool&lt;/em&gt;),  can automate this time consuming and tedious process.  It will manage compiling all source files and dependencies for you.  This means that if you need to use some libraries written by others, sbt can automatically download the right versions of those libraries and include them in your project. Moreover you can compose automatic unit-tests which can also be run by build-tool. Sbt will also provide some boilerplate code to automate starting new projects in Scala.&lt;/p&gt;

&lt;p&gt;As usual Windows users will use &lt;a href=&quot;http://www.scala-sbt.org/download.html&quot;&gt;sbt installer&lt;/a&gt;. “Nix” users will have to add official repository to their system. Sbt binaries are published to Bintray repository, and conveniently Bintray provides an RPM variant for Fedora. Super user privileges are required.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su -
Password: 

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@devbox mdyzma]# curl https://bintray.com/sbt/rpm/rpm | tee /etc/yum.repos.d/bintray-sbt-rpm.repo
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   162    0   162    0     0    183      0 --:--:-- --:--:-- --:--:--   186
&lt;span class=&quot;c&quot;&gt;#bintray--sbt-rpm - packages by  from Bintray&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bintray--sbt-rpm]
&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;bintray--sbt-rpm
&lt;span class=&quot;nv&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://dl.bintray.com/sbt/rpm
&lt;span class=&quot;nv&quot;&gt;gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nv&quot;&gt;repo_gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nv&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once Bintray repository is added you can install latest &lt;code class=&quot;highlighter-rouge&quot;&gt;sbt&lt;/code&gt; using package manager:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@devbox mdyzma]# dnf install sbt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sbt is a tool that runs from the project folder. When it starts it will try to read &lt;code class=&quot;highlighter-rouge&quot;&gt;build.sbt&lt;/code&gt; file which should contain information about project. You can also use sbt creator to start new project. To test sbt I will create test directory and run project creator:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd test&lt;/span&gt;/ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sbt new sbt/scala-seed.g8
WARN: No sbt.version &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;project/build.properties, base directory: /home/mdyzma/test
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;warn] Executing &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;batch mode.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;warn]   For better performance, hit &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ENTER] to switch to interactive mode, or
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;warn]   consider launching sbt without any commands, or explicitly passing &lt;span class=&quot;s1&quot;&gt;'shell'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Set current project to &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;build file:/home/mdyzma/test/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Minimum Scala build.

name &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;My Something Project]: hello

Template applied &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./hello

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .. &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; tree &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/
|-- hello
|   |-- build.sbt
|   |-- project
|   |   |-- Dependencies.scala
|   |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- build.properties
|   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- src
|       |-- main
|       |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- scala
|       |       &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- example
|       |           &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- Hello.scala
|       &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
|           &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- scala
|               &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- example
|                   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- HelloSpec.scala
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- target
    &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- streams
        &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- &lt;span class=&quot;nv&quot;&gt;$global&lt;/span&gt;
            |-- ivyConfiguration
            |   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- &lt;span class=&quot;nv&quot;&gt;$global&lt;/span&gt;
            |       &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- streams
            |           &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- out
            &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- projectDescriptors
                &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- &lt;span class=&quot;nv&quot;&gt;$global&lt;/span&gt;
                    &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- streams
                        &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- out&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sbt created nice basic project structure and filled it with boilerplate code. Main project folder is &lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt; and contains two important pieces: &lt;code class=&quot;highlighter-rouge&quot;&gt;build.sbt&lt;/code&gt; file and &lt;code class=&quot;highlighter-rouge&quot;&gt;src/&lt;/code&gt; folder with your Scala program. If you enter the folder and run sbt from it, you should be directed to sbt shell, which will allow you to compile, run or test your code.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; sign is sbt shell prompt. You can run scala from it simply by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd test&lt;/span&gt;/hello/
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox hello]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sbt
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Loading project definition from /home/mdyzma/test/hello/project
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Updating &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;file:/home/mdyzma/test/hello/project/&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;hello-build...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Resolving org.fusesource.jansi#jansi;1.4 ...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Done updating.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Compiling 1 Scala &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;to /home/mdyzma/test/hello/project/target/scala-2.10/sbt-0.13/classes...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Set current project to Hello &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;build file:/home/mdyzma/test/hello/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;console
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Starting scala interpreter...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info]
Welcome to Scala 2.12.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;OpenJDK 64-Bit Server VM, Java 1.8.0_131&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
Type &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;expressions &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;evaluation. Or try :help.

&lt;span class=&quot;gp&quot;&gt;scala&amp;gt; &lt;/span&gt;2+2
res0: Int &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 4

scala&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Type &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+D&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+Z&lt;/code&gt; on Windows) to exit scala REPL and go back to the sbt shell.&lt;/p&gt;

&lt;p&gt;It is also possible to  &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; your code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;run
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Updating &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;file:/home/mdyzma/test/hello/&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;root...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Resolving jline#jline;2.14.1 ...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Done updating.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Compiling 1 Scala &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;to /home/mdyzma/test/hello/target/scala-2.12/classes...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Running example.Hello
hello
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;success] Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 5 s, completed April 23, 2017 6:53:19 PM
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Compiling 1 Scala &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;to /home/mdyzma/test/hello/target/scala-2.12/test-classes...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] HelloSpec:
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] The Hello object
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] - should say hello
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Run completed &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;283 milliseconds.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Total number of tests run: 1
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Suites: completed 1, aborted 0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Tests: succeeded 1, failed 0, canceled 0, ignored 0, pending 0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] All tests passed.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;success] Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 3 s, completed April 23, 2017 6:53:40 PM&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;kernels-installation&quot;&gt;Kernels installation&lt;/h2&gt;

&lt;p&gt;Jupyter notebook is a fantastic tool, that allows my favorite programming style: Prototype driven development. Existence of REPL (Read, Evaluate, Print Loop) in all installed languages can be used to instantaneously test our code. We can also test our tests. This makes commits cleaner and faster. After all -  it is much easier to control very small chunks of the code and work on it interactively. First IPython  notebook made it possible with python, but later Jupyter project began to live own life and extended functionality by adding more languages it could “manage”. It is done by specific middle-ware called “kernel”. There is nearly 100 different kernels now(see &lt;a href=&quot;https://github.com/jupyter/jupyter/wiki/Jupyter-kernels&quot;&gt;here&lt;/a&gt;). Lets get Big Four.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ipykernel&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ipykernel-additional-python&quot;&gt;Ipykernel (additional python)&lt;/h4&gt;

&lt;p&gt;In many Linux distributions python 3.x is accessible from &lt;code class=&quot;highlighter-rouge&quot;&gt;python3&lt;/code&gt; command, but it is cumbersome to manage both python versions and their dependencies by calling specific pip/pip3 or python/python3 from the system level. Managing versions, as well as third party dependencies and environmental variables is very, very confusing. Unless one uses correct tool. Anaconda has such tool out of the box and it is called &lt;code class=&quot;highlighter-rouge&quot;&gt;conda&lt;/code&gt;. It is able to manage packages and virtual environments. With minimal effort one can create and delete entire environments with specific python and packages configuration. Other, very popular environment manager is &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; especially with additional package &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenvwrapper&lt;/code&gt;. I will use manager built in conda. More about conda virtual env capabilities &lt;a href=&quot;https://conda.io/docs/using/envs.html#&quot;&gt;here&lt;/a&gt; or in built in help system &lt;code class=&quot;highlighter-rouge&quot;&gt;conda env --help&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So…. I have Anaconda 3 with Python 3.6.1 on my Fedora machine. Let’s say I want to install additional python interpreter from 2.7 branch (last 2.x branch supported by Python Foundation). In order to create environment with specific python version, run this command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda create --name py27 &lt;span class=&quot;nv&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 ipykernel

Fetching package metadata .........
Solving package specifications: .

Package plan &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;installation &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;environment /opt/conda/envs/py27:

The following NEW packages will be INSTALLED:
...

Proceed &lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;y]/n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? y
...

&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# To activate this environment, use:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# &amp;gt; source activate py27&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# To deactivate this environment, use:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# &amp;gt; source deactivate py27&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This should install bunch of packages, including latest python 2 version with basic tools to manage packages in new environment. I also specified, that I want &lt;code class=&quot;highlighter-rouge&quot;&gt;ipykernel&lt;/code&gt; package to be installed as well.  Now I have to activate new environment following conda help from the screen:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;activate py27

&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;py27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Prompt changed, indicating that I am now in py27 environment with its packages. Quick &lt;code class=&quot;highlighter-rouge&quot;&gt;pip list&lt;/code&gt; reveals, that only handful of basic packages (including ipykernel and its dependencies) were installed :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip list
DEPRECATION: The default format will switch to columns &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the future. You can use --format&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;legacy|columns&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;or define a &lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;legacy|columns&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;your pip.conf under the &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;list] section&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; to disable this warning.
decorator &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.0.11&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
ipykernel &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.6.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
ipython &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6.0.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
ipython-genutils &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jedi &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.10.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jupyter-client &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.0.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jupyter-core &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.3.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
pexpect &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.2.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
pickleshare &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.7.4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
pip &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;9.0.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
prompt-toolkit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.0.14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
ptyprocess &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.5.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Pygments &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
python-dateutil &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.6.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
pyzmq &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16.0.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
setuptools &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;27.2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
simplegeneric &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.8.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
six &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.10.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
tornado &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.5.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
traitlets &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4.3.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
wcwidth &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.1.7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
wheel &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.29.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;py27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; root@fc954edb0a6d:/#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After activation I have to add this kernel to the global list of kernels managed by Jupyter package from main Anaconda installation. To register this kernel I have to enter: &lt;code class=&quot;highlighter-rouge&quot;&gt;python -m ipykernel install --user&lt;/code&gt; in the terminal with this kernel activated:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;py27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m ipykernel install --user
Installed kernelspec python2 &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/mdyzma/.local/share/jupyter/kernels/python2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Done.I should have both kernels accessible when I run my Jupyter Notebook:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-04-23/two-kernels.png&quot; alt=&quot;bothkernels&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;irkernel_py&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;irkernel-with-conda&quot;&gt;IRkernel with conda&lt;/h4&gt;

&lt;p&gt;Continuum Analytics did great job making R language available almost out of the box. Conda can access different repositories by specifying &lt;code class=&quot;highlighter-rouge&quot;&gt;--chanel&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; flag when calling install option. Continuum is maintaining repository with most popular R packages ported, so they can be used as python packages. To install R packages for conda enter:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;conda install --channel r r-essentials&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This command should install dozens of R packages and will make R kernel available to you when you run Jupyter Notebook.  For more information go to &lt;a href=&quot;https://conda.io/docs/r-with-conda.html&quot;&gt;R with conda&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Simple and efficient. To run R code in Jupyter notebook simply choose R kernel from the drop-down list:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-04-23/r-kernel.png&quot; alt=&quot;withrkernel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Con of this method is that you have to install nearly 160 packages, taking few gigs of space. On the other hand I will have nice and ready to go R environment in my python after typing just five words. Awesome!&lt;/p&gt;

&lt;p&gt;If you want to see alternative way (much less space hungry) check next section.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;irkernel_r&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;irkernel-from-r&quot;&gt;IRkernel from R&lt;/h4&gt;

&lt;p&gt;We will soon submit the IRkernel package to CRAN. Until then, you can install it via the devtools package:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;install.packages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'repr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IRdisplay'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'crayon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pbdZMQ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'devtools'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'stringr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install_github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IRkernel/IRkernel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IRkernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;installspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;installation&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Effect is identical to the one R will install requested packages&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ijulia&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ijulia-kernel&quot;&gt;IJulia kernel&lt;/h4&gt;

&lt;p&gt;Once you have &lt;strong&gt;Julia&lt;/strong&gt; installed on your machine, run Julia app  (you will see fancy prompt by &lt;code class=&quot;highlighter-rouge&quot;&gt;julia&amp;gt;&lt;/code&gt;), then type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;julia&amp;gt; Pkg.add(&quot;IJulia&quot;)
INFO: Initializing package repository /home/mdyzma/.julia/v0.7
INFO: Cloning METADATA from https://github.com/JuliaLang/METADATA.jl
INFO: Cloning ...
INFO: Installing ...
INFO: Building ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Julia package manager will take care of dependencies and download requested software. Specifically it will download and install basic python environment based on &lt;a href=&quot;https://conda.io/miniconda.html&quot;&gt;Miniconda&lt;/a&gt;, which will be local for Julia, and accessible only by Julia. Thanks to that you don’t really need any python installed in your system to run Julia Notebook. In that case only one kernel will be available. Julia will use its private python interpreter and minimal Jupyter installation to run notebook with it’s kernel. You can run it at any time typing in Julia REPL:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-julia&quot; data-lang=&quot;julia&quot;&gt;&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IJulia&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Precompiling&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IJulia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notebook&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Since I already had two additional kernels installed (python 2,  and R), IJulia will be added to the collection.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-04-23/julia-kernel.png&quot; alt=&quot;julia-kernel&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
In the meantime I updated entire Anaconda bundle (&lt;code class=&quot;highlighter-rouge&quot;&gt;conda update --all&lt;/code&gt;), including Jupyter notebook, which changed little bit its UI. You may notice that list of kernels is displayed first. Opposite to previous screen-shots.
&lt;/div&gt;

&lt;p&gt;In Julia language &lt;code class=&quot;highlighter-rouge&quot;&gt;using &amp;lt;package Name&amp;gt;&lt;/code&gt; is an &lt;strong&gt;import statement&lt;/strong&gt;, which pre-compiles and gets ready to work module/program denoted in the statement. Next line calls this programs subroutine called &lt;code class=&quot;highlighter-rouge&quot;&gt;notebook&lt;/code&gt;. If you use some arguments, you can modify notebooks behavior. For example &lt;code class=&quot;highlighter-rouge&quot;&gt;notebook(detached=true)&lt;/code&gt;, Julia will run notebook server in the background and you will be able to use or exit REPL without closing the notebook.&lt;/p&gt;

&lt;p&gt;By default, the notebook “dashboard” opens in your home directory, but you can open the dashboard in a different directory with &lt;code class=&quot;highlighter-rouge&quot;&gt;notebook(dir=&quot;/some/path&quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But we want to add IJulia kernel to existing Jupyter installation. to do that you need to set environmental variable &lt;code class=&quot;highlighter-rouge&quot;&gt;JUPYTER&lt;/code&gt; to the value of your current jupyer program path before running &lt;code class=&quot;highlighter-rouge&quot;&gt;Pkg.add(&quot;IJulia&quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;iscala&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;iscala-kernel&quot;&gt;IScala kernel&lt;/h4&gt;

&lt;p&gt;We will clone one of the kernels offering Scala support from GitHub:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-julia&quot; data-lang=&quot;julia&quot;&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mdyzma&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@devbox&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mdyzma&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jupyter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Cloning&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jupyter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;remote&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2129&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;remote&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Total&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2129&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reused&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reused&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2129&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Receiving&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2129&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2129&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;405.59&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KiB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;837.00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KiB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Resolving&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deltas&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;758&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;758&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Simply run &lt;code class=&quot;highlighter-rouge&quot;&gt;sh&lt;/code&gt; script prepared by the author and Scala should be added to the list of available kernels:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-04-23/scala-kernel.png&quot; alt=&quot;scala-kernel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once all kernels are installed, you can print all available kernels using Jupyter function:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdyzma@devbox mdyzma]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jupyter kernelspec list
Available kernels:
  julia-0.7    /home/mdyzma/.local/share/jupyter/kernels/julia-0.7
  python2      /home/mdyzma/.local/share/jupyter/kernels/python2
  scala        /home/mdyzma/.local/share/jupyter/kernels/scala
  ir           /home/mdyzma/anaconda3/share/jupyter/kernels/ir
  python3      /home/mdyzma/anaconda3/share/jupyter/kernels/python3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Usually notebooks are used sequentially. It means, that changing kernel during ccomputation may not be possible for all kernels. Python kernel is able to use ipython magic functions to switch kernels from cell to cell, Julia has very usefull packages - pycall and rcall, which allow to execute native code in this languages. Only R kernel has no connections outside, and it’s usage with other kernel is impossible without complicated serialization and deserialization system.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Now we have versatile, multi-language prototyping environment in the browser.&lt;/p&gt;

&lt;p&gt;If you struggle between using python Julia, Scala or R, don’t! Use all of them! At the same time in the same notebook, passing data structures between languages and perform analysis with the best tools they can offer. With Jupyter notebook it is all possible. It is possible to add even more players to the game. Julia, Haskel, Lua, bash, Octave… Pick whatever you can… Currently Jupyter supports nearly 100 different kernels (check &lt;a href=&quot;https://github.com/jupyter/jupyter/wiki/Jupyter-kernels&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;!-- Links --&gt;
&lt;!-- www --&gt;

&lt;!-- Images --&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Michal Dyzma</name>
          
          
        </author>
      

      
        <category term="python" />
      
        <category term="R" />
      
        <category term="Scala" />
      
        <category term="Julia" />
      
        <category term="jupyter-notebook," />
      
        <category term="data-science" />
      

      

      
        <summary type="html">Use R, Julia, Scala or Python? The answer is: Yes! How to create versatile environment, in which different languages are available and able to communicate with each other? Without changing program you work in and where data may be passed between specific structures characteristic for the language? This post will show you how to do it with four most powerful languages used in Data Science: Python, R, Scala and Julia.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Jupyter Notebook - python based lab book</title>
      
      <link href="http://localhost:4000/2017/03/03/jupyter-notebook-lab-book/" rel="alternate" type="text/html" title="Jupyter Notebook - python based lab book" />
      <published>2017-03-03T16:28:54+01:00</published>
      <updated>2017-03-03T16:28:54+01:00</updated>
      <id>http://localhost:4000/2017/03/03/jupyter-notebook-lab-book</id>
      <content type="html" xml:base="http://localhost:4000/2017/03/03/jupyter-notebook-lab-book/">&lt;p&gt;Data analysis using &lt;strong&gt;Jupyter Notebook&lt;/strong&gt;. Natural sciences more and more rely on skills related to Data Science. Experiments produce more and more data, and skilled researcher has to know how to deal with variety of data and sometime very large datasets. &lt;strong&gt;Anaconda&lt;/strong&gt; Python Distribution offers large set of great tools to manipulate any kind of data “out of the box”. Multitude of community packages allows to read, analyze and report all kinds of data produced by science. It is caused mostly by simple fact, that scientific community is developing it’s tools mostly in Python. How to work with small and large data in python and make Jupyter Notebook your lab-book? Check this article.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; style=&quot;text-align: justify; vertical-align:middle;&quot;&gt;
Notebooks and related data files from this article can be downloaded from this &lt;a href=&quot;https://github.com/mdyzma/blog-src-files/tree/master/2017-03-03-jupyter-notebook-lab-book&quot;&gt;GitHub repository&lt;/a&gt;
&lt;/div&gt;

&lt;h1 id=&quot;install-anaconda&quot;&gt;Install Anaconda&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Data Science&lt;/em&gt; skills are essential for every decent researcher.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.continuum.io/DOWNLOADS&quot;&gt;Anaconda Python Distribution&lt;/a&gt; prepared by Continuum Analytics is the most comprehensive and free bundle of Python software dedicated to &lt;strong&gt;Data Science&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I strongly recommended to use &lt;a href=&quot;https://www.continuum.io/DOWNLOADS&quot;&gt;Anaconda distribution&lt;/a&gt;, which will install Python interpreter, the Jupyter Notebook, and several other packages commonly used in data science and this tutorial. If you choose Anaconda 3, your interpreter will be of version 3.6 (current version) or higher (3.7 alpha is already available).&lt;/p&gt;

&lt;p&gt;Execute script and just follow instructions from installation program (your current version may differ from the one listed here):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;wget https://repo.continuum.io/archive/Anaconda3-4.3.1-Linux-x86_64.sh

--2017-03-03 19:36:37--  https://repo.continuum.io/archive/Anaconda3-4.3.1-Linux-x86_64.sh
Resolving repo.continuum.io &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;repo.continuum.io&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;... 104.16.18.10, 104.16.19.10, 2400:cb00:2048:1::6810:130a, ...
Connecting to repo.continuum.io &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;repo.continuum.io&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|104.16.18.10|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 497343851 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;474M&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;application/x-sh]
Saving to: &lt;span class=&quot;s1&quot;&gt;'Anaconda3-4.3.1-Linux-x86_64.sh'&lt;/span&gt;

Anaconda3-4.3.1-Linux-x86_64.sh     100%[&lt;span class=&quot;o&quot;&gt;==========================================&lt;/span&gt;&amp;gt;] 474.30M  14.1MB/s &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;34s

2017-03-03 19:37:12 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13.8 MB/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - &lt;span class=&quot;s1&quot;&gt;'Anaconda3-4.3.1-Linux-x86_64.sh'&lt;/span&gt; saved &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;497343851/497343851]

&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;bash ./Anaconda3-4.3.1-Linux-x86_64.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To make sure software is up to date, run:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;conda update --all&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Anaconda will install nearly 200 packages (182 to be exact), including most important for this tutorial: Jupyter Notebook, ipython, pandas, numpy, statsmodels&lt;/p&gt;

&lt;h1 id=&quot;anaconda-channels&quot;&gt;Anaconda channels&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;conda&lt;/code&gt; is built in Anaconda package manager, which uses default, maintained by Continuum Analytics python packages repository. Some packages are distributed in repositories owned by groups other than Anaconda team. Repositories are called channels. One can indicate channel simply by choosing &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;--channel&lt;/code&gt; flag during invoking &lt;code class=&quot;highlighter-rouge&quot;&gt;conda install&lt;/code&gt; command. Some of the channels are supported by continuum Analytics, like &lt;code class=&quot;highlighter-rouge&quot;&gt;conda-forge&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;omnia&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;. They are full of excellent packages developed by Anaconda community. Every time I mention I want to use other channel than default, conda will check this repositories for available packages. It is possible to add this channels to the &lt;code class=&quot;highlighter-rouge&quot;&gt;.condarc&lt;/code&gt; file (see: &lt;a href=&quot;https://conda.io/docs/config.html#the-conda-configuration-file-condarc&quot;&gt;here&lt;/a&gt;). First config file must be created by running &lt;code class=&quot;highlighter-rouge&quot;&gt;conda config&lt;/code&gt; command. If other version of this file is placed in Anaconda installation root directory it will override  users home configuration. to notify package manager, that every time  I want to install something this channels should be checked. Order of repositories is important. In case packages are deployed to both repositories listed in channels section, last repository super-seeds all above it. Example file looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;channels:
    - omnia
    - conda-forge
    - r
    - defaults

show_channel_urls: True

proxy_servers:
    http: http://user:pass@corp.com:8080
    https: https://user:pass@corp.com:8080&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Last group of inputs is very important for users behind corporate proxy, which will block &lt;code class=&quot;highlighter-rouge&quot;&gt;conda&lt;/code&gt; package lookup, unless correct settings are provided. Additionally one can alway use official python package manager &lt;code class=&quot;highlighter-rouge&quot;&gt;pip&lt;/code&gt; in parallel to &lt;code class=&quot;highlighter-rouge&quot;&gt;conda&lt;/code&gt;. Conda is able to sense origin of the package and shows this during package listing. Pip checks &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI&lt;/a&gt; (Python Packages Index) repository for python packages (which stores nearly 110 000 packages).&lt;/p&gt;

&lt;p&gt;Another great part about Anaconda and Jupyter Notebook. It is cross-platform, which means, that Notebook files created on one system will open on other system with similar package configuration.&lt;/p&gt;

&lt;h1 id=&quot;jupyter-notebook--jupyter-lab&quot;&gt;Jupyter Notebook / Jupyter Lab&lt;/h1&gt;

&lt;p&gt;Jupyter Notebook allows to create and share documents that contain live code, equations, visualizations and explanatory text. Text may be written in markdown markup  language. Code can produce rich output such as images, videos, LaTeX, and JavaScript. Interactive widgets can be used to manipulate and visualize data in real time.
Alternatively you may add path to the existing Jupyter notebook file with &lt;code class=&quot;highlighter-rouge&quot;&gt;.ipybn&lt;/code&gt; extension. If you add path to the notebook file ( extension &lt;code class=&quot;highlighter-rouge&quot;&gt;.ipynb&lt;/code&gt;), it will be opened in the location of the file. Jupyter automatically runs a local server.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;jupyter notebook

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 21:09:38.658 NotebookApp] Serving notebooks from &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;directory: /home/mdyzma/
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 21:09:38.659 NotebookApp] 0 active kernels
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 21:09:38.660 NotebookApp] The Jupyter Notebook is running at: http://localhost:8888/?token&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;c6a93623006ede30a579af4d7e693909abd90c98224916ee
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 21:09:38.660 NotebookApp] Use Control-C to stop this server and shut down all kernels &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;twice to skip confirmation&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;. &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;C 21:09:38.665 NotebookApp]

    Copy/paste this URL into your browser when you connect &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the first &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;,
    to login with a token:
        http://localhost:8888/?token&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;c6a93623006ede30a579af4d7e693909abd90c98224916ee
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 21:09:39.005 NotebookApp] Accepting one-time-token-authenticated connection from ::1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It should start notebook server in your browser (default address: &lt;a href=&quot;http://localhost:8888/tree&quot;&gt;http://127.0.0.1:8888&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-03/jupyter-notebook.png&quot; alt=&quot;notebook&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a handy collection of extensions that add functionality to the Jupyter notebook. Extensions are grouped in package &lt;a href=&quot;https://github.com/ipython-contrib/jupyter_contrib_nbextensions&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nbextensions&lt;/code&gt;&lt;/a&gt;, which is not included in fresh Anaconda installation and I will install it using conda:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;conda install -c conda-forge jupyter_contrib_nbextensions
Fetching package metadata .............
Solving package specifications: .

Package plan &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;installation &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;environment /home/mdyzma/anaconda3:

The following NEW packages will be INSTALLED:

    jupyter_contrib_core:              0.3.1-py36_0   conda-forge
    jupyter_contrib_nbextensions:      0.2.8-py36_1   conda-forge
    jupyter_highlight_selected_word:   0.0.10-py36_0  conda-forge
    jupyter_latex_envs:                1.3.8.2-py36_1 conda-forge
    jupyter_nbextensions_configurator: 0.2.5-py36_0   conda-forge

The following packages will be UPDATED:

    conda:                             4.3.21-py36_0              --&amp;gt; 4.3.21-py36_1 conda-forge

The following packages will be SUPERSEDED by a higher-priority channel:

    conda-env:                         2.6.0-0                    --&amp;gt; 2.6.0-0       conda-forge

Proceed &lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;y]/n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? y


conda-env-2.6. 100% |###############################| Time: 0:00:00 206.58 kB/s
conda-4.3.21-p 100% |###############################| Time: 0:00:01 281.65 kB/s
jupyter_contri 100% |###############################| Time: 0:00:00 417.99 kB/s
jupyter_highli 100% |###############################| Time: 0:00:00 793.82 kB/s
jupyter_latex_ 100% |###############################| Time: 0:00:02 324.68 kB/s
jupyter_nbexte 100% |###############################| Time: 0:00:01 442.23 kB/s
jupyter_contri 100% |###############################| Time: 0:00:03   5.47 MB/s&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Because I used conda it will automatically register all extensions and copy necessary &lt;code class=&quot;highlighter-rouge&quot;&gt;javascript&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; files in Jupyter environment for me. If I used pip instead, I would have to fetch additional command: &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter contrib nbextension install --user&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Jupyter Lab is new project of Jupyter team, which eventually will replace good old notebook, but currently it is in very early alpha release version and it is not recommended to be used in any serious project. It has built in file manager, image browser, documentation and many, many other. And one disadvantage: &lt;code class=&quot;highlighter-rouge&quot;&gt;ipywidgets&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;nbextensions&lt;/code&gt; do not work yet or their functionality must be loaded through lab extensions system, which is not very convenient. Another handy extension is &lt;a href=&quot;https://github.com/rasbt/watermark&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;watermark&lt;/code&gt;&lt;/a&gt; package. It will timestamp notebooks and provide basic python configuration info. I will fetch latest version from GitHub:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;pip install -e git+https://github.com/rasbt/watermark#egg&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;watermark
Obtaining watermark from git+https://github.com/rasbt/watermark#egg&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;watermark
  Cloning https://github.com/rasbt/watermark to /home/mdyzma/watermark
Installing collected packages: watermark
  Running setup.py develop &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;watermark
Successfully installed watermark&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jupyter lab is not accessible in Anaconda distribution out of the box and must be installed. One can do it with default package manager from &lt;code class=&quot;highlighter-rouge&quot;&gt;conda-forge&lt;/code&gt; channel:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;conda install -c conda-forge jupyterlab
Fetching package metadata .............
Solving package specifications: .

Package plan &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;installation &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;environment /home/mdyzma/anaconda3:

The following NEW packages will be INSTALLED:

    jupyterlab:          0.23.2-py36_0 conda-forge
    jupyterlab_launcher: 0.2.9-py36_0  conda-forge

The following packages will be SUPERSEDED by a higher-priority channel:

    conda:               4.3.21-py36_0             --&amp;gt; 4.3.21-py36_0 conda-forge
    conda-env:           2.6.0-0                   --&amp;gt; 2.6.0-0       conda-forge

Proceed &lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;y]/n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? y

conda-env-2.6. 100% |###############################| Time: 0:00:00  73.67 kB/s
conda-4.3.21-p 100% |###############################| Time: 0:00:01 378.40 kB/s
jupyterlab_lau 100% |###############################| Time: 0:00:00   1.18 MB/s
jupyterlab-0.2 100% |###############################| Time: 0:00:01   1.34 MB/s&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lab environment can be started using &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter lab&lt;/code&gt; command. It should start in default browser under this address: &lt;a href=&quot;http://localhost:8888/lab&quot;&gt;http://127.0.0.1:8888&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-03/jupyter-lab.png&quot; alt=&quot;lab&quot; /&gt;&lt;/p&gt;

&lt;p&gt;More information about this project and development plans can be found &lt;a href=&quot;https://github.com/jupyterlab/jupyterlab&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Simple &lt;code class=&quot;highlighter-rouge&quot;&gt;conda list&lt;/code&gt; shows all packages installed in current environment. Main tools I will use in this tutorial include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;numpy&lt;/code&gt; - array calculations&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sympy&lt;/code&gt; - symbolic mathematics&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;matplotlib&lt;/code&gt; - 2D plotting&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;statsmodels&lt;/code&gt; - statistical models&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pandas&lt;/code&gt; - data structures and analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;which are part of SciPy - python based scientific ecosystem. &lt;a href=&quot;http://www.numpy.org&quot;&gt;Numpy&lt;/a&gt; and &lt;a href=&quot;http://pandas.pydata.org&quot;&gt;Pandas&lt;/a&gt; alone have enormous documentations, which are worth to check. Huge advantage of notebook environment is that it allows to compute and manipulate data directly and export entire notebook in various formats, to share with other. There is also &lt;code class=&quot;highlighter-rouge&quot;&gt;JupyterHub&lt;/code&gt;, providing access to the notebook for multiple users, which can be used as a official project documentation  in secure location and controlled access. Check &lt;a href=&quot;https://jupyterhub.readthedocs.io/en/latest/&quot;&gt;JupyterHub&lt;/a&gt; documentation to learn more.&lt;/p&gt;

&lt;h1 id=&quot;experiments-examples&quot;&gt;Experiments examples:&lt;/h1&gt;

&lt;p&gt;To present power enclosed in python and jupyter notebook I will create several scenarios of typical experiments conducted in labs. It will cover data acquisition, modeling, visualization and data storage.&lt;/p&gt;

&lt;h2 id=&quot;protein-concentration&quot;&gt;Protein concentration&lt;/h2&gt;

&lt;p&gt;Example of simple experiment with data from VIS spectrophotometric experiment. Lets assume we have solution with protein colored by protein dye. For a uniform absorbing solution the proportion of light passing through is called the transmittance: \(T\), and the proportion of light absorbed by molecules in the medium is absorbance, \(Abs\). Experiment consists of three steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Determine the absorption spectra \(\lambda_{max}\)&lt;/li&gt;
  &lt;li&gt;Calculate the extinction coefficient (\(\epsilon\)) of the standards.&lt;/li&gt;
  &lt;li&gt;Determine the concentration of proteins in solution&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- #### Theoretical background

For a uniform absorbing solution  the proportion of light passing through is called the transmittance: \\(T\\), and the proportion of light absorbed by molecules in the medium is absorbance, \\(Abs\\). 

Transmittance is defined as:

$$T =  \frac{I}{I_{o}} $$

where:

* \\(I_o\\) is intensity of the incident radiation entering the medium.
* \\(I\\) = intensity of the transmitted radiation leaving the medium.


T can be expressed as percent transmittance, \\(%T\\):

$$%T = \frac{I}{I_{o}} \times 100$$

The relationship between percent transmittance (\\(\%T\\)) and absorbance (\\(Abs\\)) is given by the following equation:

$$Abs = 2 - log (\%T) $$

From above equation we can see, that probe, which absorbs 100% of the light will have transmittance 100% and absorbance equal 2 \\((log_{10} 100 = 2)\\), while completely transparent sample will have absorbance 0. Therefore theoretical span of Absorbance values range from 0 to 2, however Beer-Lambert's law is most accurate in range 0.05 to 0.7 \\(Abs\\).

The Beer-Lambert Law states that Absorbance is proportional to the concentration of the absorbing molecules, the length of light-path through the medium and the molar extinction coefficient:

$$ Abs = \epsilon \cdot c \cdot l $$

where:

* \\(Abs\\) – absorbance
* \\(\epsilon\\) – light extinction coefficient at max absorption wavelength \\(\lambda_{max}\\)
* \\(c\\) – substance concentration
* \\(l\\) – length of light-path

 --&gt;
&lt;h3 id=&quot;determine-the-absorption-spectra&quot;&gt;Determine the absorption spectra&lt;/h3&gt;

&lt;p&gt;In order to obtain \(\lambda_{max}\) measure the absorbance of the diluted sample at 50 nm intervals between 350-700 nm. This will give an estimate of where the sample absorbs most (peaks) and least (valleys). I will generate them using python. Procedure requires that all measurements to be within 0-0.7 absorbance range. If maximal values are higher, sample should be diluted:&lt;/p&gt;

&lt;p&gt;Data can be generated:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# absorbance of the sample at 10 nm intervals between 350-700 nm.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;350&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;750&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#random values in range 0 - 0.7&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Absorbance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Or read from file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data/lambda_max.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Absorbance&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pandas can ingest every text and binary data format, which fits RAM memory. This way I received table called DataFrame. To find basic statistics, lets call &lt;code class=&quot;highlighter-rouge&quot;&gt;describe()&lt;/code&gt; method on data Frame.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;Absorbance&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;36.000000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;     &lt;span class=&quot;mf&quot;&gt;0.355109&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.176637&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.018094&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.265485&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.371752&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.470539&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.683876&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Find wavelength for which absorbance is highest (it is trivial for few arguments, but becomes more complex when amount of data grows):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Absorbance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;410&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And plot it to get more direct data feel:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Absorbance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;lambda_{max}$ of the protein&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Absorbance&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-03/lambda_max.png&quot; alt=&quot;lambda&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;calculate-the-extinction-coefficient-epsilon-of-the-standards&quot;&gt;Calculate the extinction coefficient (\(\epsilon\)) of the standards.&lt;/h3&gt;

&lt;p&gt;The Beer-Lambert Law states that Absorbance is proportional to the concentration of the absorbing molecules, the length of light-path through the medium and the molar extinction coefficient:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Abs = \epsilon \cdot c \cdot l&lt;/script&gt;

&lt;p&gt;where:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;\(Abs\) – absorbance&lt;/li&gt;
  &lt;li&gt;\(\epsilon\) – light extinction coefficient at max absorption wavelength \(\lambda_{max}\)&lt;/li&gt;
  &lt;li&gt;\(c\) – substance concentration&lt;/li&gt;
  &lt;li&gt;\(l\) – length of light-path&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;therefore \(\epsilon\) is equal to:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\epsilon =  \frac{Abs_{410}}{c \cdot l}&lt;/script&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Abs_410 = 0.683876&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;epsilon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.683876&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;where c is concentration of the standard.&lt;/p&gt;

&lt;h3 id=&quot;determine-the-concentration-of-proteins-in-solution&quot;&gt;Determine the concentration of proteins in solution&lt;/h3&gt;

&lt;p&gt;Knowing epsilon just simply solve standard Beer-Lamber equation for \(c\). Another approach is to construct calibration curve from known samples, determine function, which fits data best and use it to calculate x (concentration) with known y (absorbance).&lt;/p&gt;

&lt;h4 id=&quot;calibration-curve&quot;&gt;Calibration curve&lt;/h4&gt;

&lt;p&gt;Consider the following example involving a set of six standard points (5, 10, 25, 30, 40, 50, 60, and 70 µg/mL). Absorbance: (0.106, 0.236, 0.544, 0.690, 0.791, 0.861, 0.882, 0.911). I have two columns of x and y values of the calibration curve points.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Conc.&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Abs.&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.106&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.236&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;25&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.544&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;30&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.690&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;40&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.791&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;50&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.861&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;60&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.882&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;70&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.911&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
It is quite easy to plot this points to visualize data and get some general overview of their shape, like that:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Calibration curve data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;absorbance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.106&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.236&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.544&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.690&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.791&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.861&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.882&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.911&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;absorbance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'o'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Not bad, six lines of code and plot is ready.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-03/calibration-points.png&quot; alt=&quot;calibration-points&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;linear-fit&quot;&gt;Linear fit&lt;/h4&gt;

&lt;p&gt;To fit the data to the line I will use &lt;code class=&quot;highlighter-rouge&quot;&gt;scipy&lt;/code&gt; package. Linear fit means I will try to find function with general definition:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;y = Ax + b&lt;/script&gt;

&lt;p&gt;where:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;\(A\) - is slope&lt;/li&gt;
  &lt;li&gt;\(b\) - is intercept&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and specific function will have minimal error value fitted for all points with least square regression.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scipy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;slope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intercept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std_err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linregress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;absorbance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now I will visualize standard curve points and line fitted to them:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# plot of fitted line&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;absorbance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'o'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intercept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fitted line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-03/calibration-linear-fit.png&quot; alt=&quot;calibration-points&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For this set of points linear fitting seems to be suboptimal choice. \(R^2 = 0.8754454029810919\). Lets try other type of function - polynomial.&lt;/p&gt;

&lt;h4 id=&quot;polynomial-fit&quot;&gt;Polynomial fit&lt;/h4&gt;

&lt;p&gt;Polynomial fitting may better reflect character of the points. In above data set there is step increase region with more flat part at the top. It would be much better to fit other type of function, which will be able to reflect plateau at the end. Such properties have polynomials or logarithmic functions. Lets try with second degree polynomial known as quadratic function. In this case second degree polynomial is sufficient. Fitting function creates list of coefficients for least-squares fit of the data points to the polynomial function described in general as: \(p(x) = c_0 + c_1 x + … + c_n x_n\):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#polynomial fit&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy.polynomial&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Polynomial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;coefs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polyfit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;absorbance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ffit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polyval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coefs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;absorbance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'o'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ffit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fitted line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-03/calibration-polynomial-fit.png&quot; alt=&quot;calibration-linear-fit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Coefficients are: -0.03969222, 0.03034985, -0.00024301. Therefore polynomial has form:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;y = -0.0396x^2 + 0.0303x - 0.00024&lt;/script&gt;

&lt;p&gt;You can go ahead and write script taking third degree polynomial to fit the data, or run snippet prepared in Jupyter Notebook. As I mentioned before, there is minimal difference between quadratic and cubic fit. Both polynomials comparison should look similar to this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-03/polynomial-comparison.png&quot; alt=&quot;polynomials comparison-linear-fit&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;concnetration-interpolation&quot;&gt;Concnetration interpolation&lt;/h4&gt;

&lt;p&gt;Interpolation of the unknown sample is simple as resolving one of the functions in respect to x. In case of linear regression transformation is trivial (rounded to four decimal places):&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x = \frac{(absorbance - intercept)}{slope} = \frac{(absorbance - 0.176)}{0.0124}&lt;/script&gt;

&lt;p&gt;Lets calculate concentration for 0.5 absorbance:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x =  \frac{(0.5 - 0.176)}{0.0124} = 26.129&lt;/script&gt;

&lt;p&gt;Althought this is very simple algebra, it can also be replaced by python computations. &lt;code class=&quot;highlighter-rouge&quot;&gt;sympy&lt;/code&gt; module allows to perform symbolic math operations like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sympy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;smp&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;smp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_printing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use_unicode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;smp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solveset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\left\{- \frac{b}{A}\right\}&lt;/script&gt;

&lt;p&gt;What this lines do? First two import sympy package and set some printing options. Next identify normal python variables x, y, A, b as sympy &lt;code class=&quot;highlighter-rouge&quot;&gt;Symbol()&lt;/code&gt; objects. Further expression is set and solved against x. This approach calculates exact x for y equal 0. If I substitute y with some value, I will have to change expression to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;smp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solveset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\left\{- \frac{1}{A} \left(b - y\right)\right\}&lt;/script&gt;

&lt;p&gt;For second degree polynomial it is little bit more complicated. We can use well known math formula for quadratic equation roots, or ask sympy and numpy to calculate it for us.&lt;/p&gt;

&lt;p&gt;To get exact symbolic solution:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a1 a2 a3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;smp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solveset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which results in:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\left\{- \frac{a_{2}}{2 a_{1}} - \frac{1}{2 a_{1}} \sqrt{- 4 a_{1} a_{3} + a_{2}^{2}}, - \frac{a_{2}}{2 a_{1}} + \frac{1}{2 a_{1}} \sqrt{- 4 a_{1} a_{3} + a_{2}^{2}}\right\}&lt;/script&gt;

&lt;p&gt;For numeric solution I will solve the equation \(f(x) - y = 0\) using &lt;code class=&quot;highlighter-rouge&quot;&gt;np.roots&lt;/code&gt;, where \(f(x)\) is our polynomial:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy.polynomial&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Polynomial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concentration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;absorbance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;21.47501868&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;103.41541963&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For absorbance equal 0.5 program returned two values: 21.47501868 and 103.41541963. Quick look at the graph shows that value we are looking for is 21.475.&lt;/p&gt;

&lt;p&gt;But why there are two values and how to identify correct one? It is easy If we go back to the fitting and check what kind of function was used to fit data. I used parabola (quadratic), ascending arm of the parabola to be exact. Therefore for each point within x range (5-70) one can expect that quadratic function will have additional solution from descending arm, outside of the x scope. In reality our fitting function looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-03/quadratic_fit.png&quot; alt=&quot;quadratic fit full&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That is why only points fitted within x data range make sense and rest is irrelevant. There is one concern, which is related to the maximum point, which may be placed within x data range and then plateau data may suffer from that, giving wrong results. Possibly for this data set. logarithmic function would be perfect. However from Beer-Lambert law we know, that only linear growth phase from 0.05 to 0.7 absorbance is relevant, thus accuracy of the asymptotic region can be neglected.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Example Jupyter notebook can be downloaded from &lt;a href=&quot;https://github.com/mdyzma/blog-src-files/tree/master/2017-03-03-jupyter-notebook-lab-book&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
&lt;!-- Links --&gt;&lt;/p&gt;

&lt;!-- Images --&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Michal Dyzma</name>
          
          
        </author>
      

      
        <category term="python" />
      
        <category term="jupyter-notebook" />
      
        <category term="data-science" />
      

      

      
        <summary type="html">Data analysis using Jupyter Notebook. Natural sciences more and more rely on skills related to Data Science. Experiments produce more and more data, and skilled researcher has to know how to deal with variety of data and sometime very large datasets. Anaconda Python Distribution offers large set of great tools to manipulate any kind of data “out of the box”. Multitude of community packages allows to read, analyze and report all kinds of data produced by science. It is caused mostly by simple fact, that scientific community is developing it’s tools mostly in Python. How to work with small and large data in python and make Jupyter Notebook your lab-book? Check this article.</summary>
      

      
      
    </entry>
  
  
</feed>
